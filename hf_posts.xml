<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Hugging Face Posts</title><link>https://huggingface.co/</link><description>This is a website scraping RSS feed for the Hugginface trending posts.</description><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>Trained a model for emotion-controllable TTS based on MiMo audio on LAION's dataset.</title><link>https://huggingface.co/posts/mrfakename/579691668854907</link><description>Trained a model for emotion-controllable TTS based on MiMo audio on LAION's dataset. Still very early and does have an issue with hallucinating but results seem pretty good so far, given that it is very early into the training run. Will probably kick off a new run later with some settings tweaked. Put up a demo here: mrfakename/EmoAct-MiMo (Turn 🔊 on to hear audio samples) See translation</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/mrfakename/579691668854907</guid></item><item><title>🚀💡🌟 New Research Alert - ICCV 2025 (Oral)! 🌟🪄🚀</title><link>https://huggingface.co/posts/DmitryRyumin/213442382070723</link><description>🚀💡🌟 New Research Alert - ICCV 2025 (Oral)! 🌟🪄🚀 📄 Title: LoftUp: Learning a Coordinate-based Feature Upsampler for Vision Foundation Models 🔝 📝 Description: LoftUp is a coordinate-based transformer that upscales the low-resolution features of VFMs (e.g. DINOv2 and CLIP) using cross-attention and self-distilled pseudo-ground truth (pseudo-GT) from SAM. 👥 Authors: Haiwen Huang, Anpei Chen, Volodymyr Havrylov, Andreas Geiger, and Dan Zhang 📅 Conference: ICCV, 19 – 23 Oct, 2025 | Honolulu, Hawai'i, USA 🇺🇸 📄 Paper: LoftUp: Learning a Coordinate-Based Feature Upsampler for Vision Foundation Models (2504.14032) 🌐 Github Page: https://andrehuang.github.io/loftup-site 📁 Repository: https://github.com/andrehuang/loftup 🚀 ICCV-2023-25-Papers: https://github.com/DmitryRyumin/ICCV-2023-25-Papers 🚀 Added to the Foundation Models and Representation Learning Section: https://github.com/DmitryRyumin/ICCV-2023-25-Papers/blob/main/sections/2025/main/foundation-models-and-representation-learning.md 📚...</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/DmitryRyumin/213442382070723</guid></item><item><title>What a fantastic community!</title><link>https://huggingface.co/posts/sourceoftruthdata/665062314942834</link><description>What a fantastic community! See translation</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/sourceoftruthdata/665062314942834</guid></item><item><title>Context rot is such a catchy phrase, but the problem has been identified 2+ years ago, called attention decay.</title><link>https://huggingface.co/posts/onekq/651277400400501</link><description>Context rot is such a catchy phrase, but the problem has been identified 2+ years ago, called attention decay. Lost in the Middle: How Language Models Use Long Contexts (2307.03172) I spotted the same problem in coding tasks, and documented in my book ( https://www.amazon.com/dp/9999331130 ). Why did this problem become hot again? This is because many of us thought the problem has been solved by long context models, which is not true. Here we were misled by benchmarks. Most long-context benchmarks build around the QA scenario, i.e. "finding needle in haystack". But in agentic scenarios, the model needs to find EVERYTHING in the haystack, and just can't afford enough attention for this challenge. See translation</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/onekq/651277400400501</guid></item><item><title>🚀🤖🌟 New Research Alert - ICCV 2025 (Oral)! 🌟🤖🚀</title><link>https://huggingface.co/posts/DmitryRyumin/256377930602220</link><description>🚀🤖🌟 New Research Alert - ICCV 2025 (Oral)! 🌟🤖🚀 📄 Title: Variance-based Pruning for Accelerating and Compressing Trained Networks 🔝 📝 Description: The one-shot pruning method efficiently compresses networks, reducing computation and memory usage while retaining almost full performance and requiring minimal fine-tuning. 👥 Authors: Uranik Berisha, Jens Mehnert, and Alexandru Paul Condurache 📅 Conference: ICCV, 19 – 23 Oct, 2025 | Honolulu, Hawai'i, USA 🇺🇸 📄 Paper: Variance-Based Pruning for Accelerating and Compressing Trained Networks (2507.12988) 🚀 ICCV-2023-25-Papers: https://github.com/DmitryRyumin/ICCV-2023-25-Papers 🚀 Added to the Efficient Learning Section: https://github.com/DmitryRyumin/ICCV-2023-25-Papers/blob/main/sections/2025/main/efficient-learning.md 📚 More Papers: more cutting-edge research presented at other conferences in the DmitryRyumin/NewEraAI-Papers curated by @ DmitryRyumin 🔍 Keywords: #VarianceBasedPruning #NetworkCompression #ModelAcceleration...</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/DmitryRyumin/256377930602220</guid></item><item><title>I made a code sniping agent to detect when new AI papers with code (and weights) are released, and then automatically create a Gradio demo on Hugging Face 🧙</title><link>https://huggingface.co/posts/jbilcke-hf/233313729271846</link><description>I made a code sniping agent to detect when new AI papers with code (and weights) are released, and then automatically create a Gradio demo on Hugging Face 🧙 Here are some examples generated 100% automatically: https://huggingface.co/collections/jbilcke-hf/sniped I call this agent CheatCode ( https://github.com/jbilcke-hf/CheatCode ) because it skips so many steps that it kinda feels like breaking the rules of the AI tech release game 😅 As with any experimental technology, there is still room for improvement 👩🏻‍🔬: - Currently the demos are all generated in one go and not built or tested by the agent itself. A more robust version should loop over the deployed app to fix build/runtime issues. - There is still a bit of human curation done to avoid making demos for things that can’t really be demonstrated on ZeroGPU (eg. tasks taking several minutes) - Some papers can actually be showcased in a variety of ways, which isn’t really supported (see Demo 2) See translation</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/jbilcke-hf/233313729271846</guid></item><item><title>🚀🏷️🌟 New Research Alert - ICCV 2025 (Oral)! 🌟🧩🚀</title><link>https://huggingface.co/posts/DmitryRyumin/687304943131343</link><description>🚀🏷️🌟 New Research Alert - ICCV 2025 (Oral)! 🌟🧩🚀 📄 Title: Heavy Labels Out! Dataset Distillation with Label Space Lightening 🔝 📝 Description: The HeLlO framework is a new corpus distillation method that removes the need for large soft labels. It uses a lightweight, online image-to-label projector based on CLIP. This projector has been adapted using LoRA-style, parameter-efficient tuning. It has also been initialized with text embeddings. 👥 Authors: @ roseannelexie , @ Huage001 , Zigeng Chen, Jingwen Ye, and Xinchao Wang 📅 Conference: ICCV, 19 – 23 Oct, 2025 | Honolulu, Hawai'i, USA 🇺🇸 📄 Paper: Heavy Labels Out! Dataset Distillation with Label Space Lightening (2408.08201) 📺 Video: https://www.youtube.com/watch?v=kAyK_3wskgA 🚀 ICCV-2023-25-Papers: https://github.com/DmitryRyumin/ICCV-2023-25-Papers 🚀 Added to the Efficient Learning Section: https://github.com/DmitryRyumin/ICCV-2023-25-Papers/blob/main/sections/2025/main/efficient-learning.md 📚 More Papers: more cutting-edge research...</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/DmitryRyumin/687304943131343</guid></item><item><title>FlashPack: Lightning-Fast Model Loading for PyTorch</title><link>https://huggingface.co/posts/gokaygokay/758462412009896</link><description>FlashPack: Lightning-Fast Model Loading for PyTorch https://github.com/fal-ai/flashpack FlashPack — a new, high-throughput file format and loading mechanism for PyTorch that makes model checkpoint I/O blazingly fast, even on systems without access to GPU Direct Storage (GDS). With FlashPack, loading any model can be 3–6× faster than with the current state-of-the-art methods like accelerate or the standard load_state_dict() and to() flow — all wrapped in a lightweight, pure-Python package that works anywhere. See translation</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/gokaygokay/758462412009896</guid></item><item><title>I am on the model layer and focus on atomic tasks, so I don't get involved in product discussions. But this provocative article provoked the community quite a bit. The case in point is Claude Code, which happens to be my biggest productivity revolution since ChatGPT.</title><link>https://huggingface.co/posts/onekq/981925262392459</link><description>I am on the model layer and focus on atomic tasks, so I don't get involved in product discussions. But this provocative article provoked the community quite a bit. The case in point is Claude Code, which happens to be my biggest productivity revolution since ChatGPT. RAG predated TUI and agents. So to be fair it's quite an achievement to survive the AI evolution. But I feel it is overshadowed by context engineering in the agent era. How does everyone feel about this? https://www.nicolasbustamante.com/p/the-rag-obituary-killed-by-agents See translation</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/onekq/981925262392459</guid></item><item><title>With</title><link>https://huggingface.co/posts/branikita/467826227099244</link><description>With Robonine team we recently verified the rotational speed of the Feetech STS3250 servo motor (12 V, 50 kg·cm torque, magnetic encoder) to compare measured performance with the official specification. According to the datasheet: - Rated speed: 0.133 s per 60° Calculation: - 0.133 s × 6 = 0.798 s per full rotation - 1 / 0.798 = 1.253 revolutions per second - 1.253 × 60 = 75.2 RPM This confirms the official specification of approximately 75 RPM at 12 V under no load. Our measurement: - Encoder output: 5,300 values per second - Encoder resolution: 4,096 counts per revolution Calculation: - Revolutions per second = 5,300 ÷ 4,096 = 1.294 rev/s - RPM = 1.294 × 60 = 77.6 RPM Result: The measured value differs by only about 2–3% from the datasheet specification, confirming that the STS3250 performs very close to its rated no-load speed. This close agreement validates both the servo’s performance and our measurement approach. Video: https://youtube.com/shorts/_O_mVZvYQlQ?feature=share...</description><pubDate>Wed, 29 Oct 2025 17:22:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/branikita/467826227099244</guid></item></channel></rss>