<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Hugging Face Posts</title><link>https://huggingface.co/</link><description>This is a website scraping RSS feed for the Hugginface trending posts.</description><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>üéâ Dhanishtha 2.0 Preview is Now Open Source!</title><link>https://huggingface.co/posts/Abhaykoul/404767027882987</link><description>üéâ Dhanishtha 2.0 Preview is Now Open Source! The world's first Intermediate Thinking Model is now available to everyone! Dhanishtha 2.0 Preview brings revolutionary intermediate thinking capabilities to the open-source community. Unlike traditional reasoning models that think once, Dhanishtha can think, answer, rethink, answer again, and continue rethinking as needed using multiple blocks between responses. üöÄ Key Features - Intermediate thinking: Think ‚Üí Answer ‚Üí Rethink ‚Üí Answer ‚Üí Rethink if needed... - Token efficient: Uses up to 79% fewer tokens than DeepSeek R1 on similar queries - Transparent thinking: See the model's reasoning process in real-time - Open source: Freely available for research and development HelpingAI/Dhanishtha-2.0-preview https://helpingai.co/chat See translation</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/Abhaykoul/404767027882987</guid></item><item><title>Inference for generative ai models looks like a mine field, but there‚Äôs a simple protocol for picking the best inference:</title><link>https://huggingface.co/posts/burtenshaw/697123415535373</link><description>Inference for generative ai models looks like a mine field, but there‚Äôs a simple protocol for picking the best inference: üåç 95% of users &gt;&gt; If you‚Äôre using open (large) models and need fast online inference, then use Inference providers on auto mode, and let it choose the best provider for the model. https://huggingface.co/docs/inference-providers/index üë∑ fine-tuners/ bespoke &gt;&gt; If you‚Äôve got custom setups, use Inference Endpoints to define a configuration from AWS, Azure, GCP. https://endpoints.huggingface.co/ ü¶´ Locals &gt;&gt; If you‚Äôre trying to stretch everything you can out of a server or local machine, use Llama.cpp, Jan, LMStudio or vLLM. https://huggingface.co/settings/local-apps#local-apps ü™ü Browsers &gt;&gt; If you need open models running right here in the browser, use transformers.js. https://github.com/huggingface/transformers.js Let me know what you‚Äôre using, and if you think it‚Äôs more complex than this. See translation</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/burtenshaw/697123415535373</guid></item><item><title>‚ÄºÔ∏èSentence Transformers v5.0 is out! The biggest update yet introduces Sparse Embedding models, encode methods improvements, Router module for asymmetric models &amp; much more. Sparse + Dense = üî• hybrid search performance! Details:</title><link>https://huggingface.co/posts/tomaarsen/190568030432786</link><description>‚ÄºÔ∏èSentence Transformers v5.0 is out! The biggest update yet introduces Sparse Embedding models, encode methods improvements, Router module for asymmetric models &amp; much more. Sparse + Dense = üî• hybrid search performance! Details: 1Ô∏è‚É£ Sparse Encoder Models Brand new support for sparse embedding models that generate high-dimensional embeddings (30,000+ dims) where &lt;1% are non-zero: - Full SPLADE, Inference-free SPLADE, and CSR architecture support - 4 new modules, 12 new losses, 9 new evaluators - Integration with @ elastic-co , @ opensearch-project , @ NAVER LABS Europe, @ qdrant , @ IBM , etc. - Decode interpretable embeddings to understand token importance - Hybrid search integration to get the best of both worlds 2Ô∏è‚É£ Enhanced Encode Methods &amp; Multi-Processing - Introduce encode_query &amp; encode_document automatically use predefined prompts - No more manual pool management - just pass device list directly to encode() - Much cleaner and easier to use than the old multi-process approach...</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/tomaarsen/190568030432786</guid></item><item><title>I played around with the new RXTX paper (XX^T) and was able to train nanogpt with 4x4 RXTX matmuls in both attention layer and optimizerü§ï</title><link>https://huggingface.co/posts/Jaward/639375924369190</link><description>I played around with the new RXTX paper (XX^T) and was able to train nanogpt with 4x4 RXTX matmuls in both attention layer and optimizerü§ï It just works (well I had to add some guardrails) but still saves 5% of memory usage: The Patch: - Computes attention scores with a 4x4 blockwise RXTX matmuls (no pytorch dot prod) - Handles arbitrary sequence lengths by padding to the nearest multiple of 4. - An RXTX variant of shampoo with params reshaped into 4x4 blocks during each optimizer step. - Uses 5% less ops Code: https://github.com/Jaykef/ai-algorithms/blob/main/nanogpt-rxtx.ipynb Paper: https://arxiv.org/pdf/2505.09814 See translation</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/Jaward/639375924369190</guid></item><item><title>Gemma 3n finetuning is now 1.5x faster and uses 50% less VRAM in Unsloth!</title><link>https://huggingface.co/posts/danielhanchen/374907101016508</link><description>Gemma 3n finetuning is now 1.5x faster and uses 50% less VRAM in Unsloth! Click "Use this model" and click "Google Colab"! unsloth/gemma-3n-E4B-it unsloth/gemma-3n-E2B-it https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Gemma3N_(4B)-Conversational.ipynb See translation</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/danielhanchen/374907101016508</guid></item><item><title>‚ÄºÔ∏èSentence Transformers v5.0 is out! The biggest update yet introduces Sparse Embedding models, encode methods improvements, Router module &amp; much more. Sparse + Dense = üî• hybrid search performance!</title><link>https://huggingface.co/posts/arthurbresnu/914099787091289</link><description>‚ÄºÔ∏èSentence Transformers v5.0 is out! The biggest update yet introduces Sparse Embedding models, encode methods improvements, Router module &amp; much more. Sparse + Dense = üî• hybrid search performance! 1Ô∏è‚É£ Sparse Encoder Models - New support for sparse embeddings (30k+ dims, &lt;1% non-zero) * Full SPLADE, Inference-free SPLADE, CSR support * 4 new modules, 12 losses, 9 evaluators * Integration with elastic, opensearch-project, Qdrant, ibm-granite * Decode interpretable embeddings * Hybrid search integration 2Ô∏è‚É£ Enhanced Encode Methods * encode_query &amp; encode_document with auto prompts * Direct device list passing to encode() * Cleaner multi-processing 3Ô∏è‚É£ Router Module &amp; Training * Different paths for queries vs documents * Custom learning rates per parameter group * Composite loss logging * Perfect for two-tower architectures 4Ô∏è‚É£ Documentation &amp; Training * New Training/Loss Overview docs * 6 training example pages * Search engine integration examples Read the comprehensive blogpost about...</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/arthurbresnu/914099787091289</guid></item><item><title>If you're using any HF libraries, you should enable the Hub MCP in your agentic coding tool!</title><link>https://huggingface.co/posts/m-ric/145810386001131</link><description>If you're using any HF libraries, you should enable the Hub MCP in your agentic coding tool! The brand new Docs Semantic Search tool is intravenous caffeine supply for Cursor, enables to correct API errors in a few seconds, gj @ mishig ‚ö°Ô∏è‚ö°Ô∏è üëâ To enable Hub MCP, head to your account setting, under MCP, and it will give you everything you need! See translation</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/m-ric/145810386001131</guid></item><item><title>The full Celestia 3 science-reasoning dataset is here!</title><link>https://huggingface.co/posts/sequelbox/523631078445392</link><description>The full Celestia 3 science-reasoning dataset is here! - 91k high-quality synthetic science prompts answered by DeepSeek-R1-0528 - subjects include physics, biology, chemistry, computer science, Earth science, astronomy, and information theory - one of the reasoning datasets powering the upcoming Shining Valiant 3 :) coming soon! GET IT NOW, FOR EVERYONE: sequelbox/Celestia3-DeepSeek-R1-0528 SUPPORT OUR RELEASES: sequelbox/SupportOpenSource with love, allegra See translation</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/sequelbox/523631078445392</guid></item><item><title>Check out new symbolic music AI front end and CLI training app</title><link>https://huggingface.co/posts/asigalov61/301808424415801</link><description>Check out new symbolic music AI front end and CLI training app https://webchatappai.github.io/midi-gen/ https://github.com/WebChatAppAi/Orpheus-Midi-Model-Maker @ Timzoid @ Csplk @ not-lain @ victor @ bartowski @ John6666 See translation</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/asigalov61/301808424415801</guid></item><item><title>üß∞ Free up space on the Hub with</title><link>https://huggingface.co/posts/anakin87/460502915743038</link><description>üß∞ Free up space on the Hub with super_squash_history üßπ As you may know, Hugging Face Hub has storage limits on private repos (100 GB for free users, 1 TB for PROs). This weekend I did some cleanup on my private repos I went 1.58 TB down to 1 GB. üòÖ Besides deleting old, unused models, the main tool I used was a lesser-known command: super_squash_history . When you train a model, you often push multiple checkpoints to the Hub. Each checkpoint = a commit. A 2.6B model in BF16 is ~5 GB. So 10 checkpoints = 50 GB. That adds up fast. While full commit history can be useful for rollbacks, it's often unnecessary for older experiments where only the final model matters. In these cases, you can use super_squash_history : it reduces your entire repo history to a single commit. https://huggingface.co/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.super_squash_history ‚ö†Ô∏è super_squash_history is a non-revertible operation. Once squashed, the commit history cannot be...</description><pubDate>Thu, 03 Jul 2025 09:26:30 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/anakin87/460502915743038</guid></item></channel></rss>