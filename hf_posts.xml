<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Hugging Face Posts</title><link>https://huggingface.co/</link><description>This is a website scraping RSS feed for the Hugginface trending posts.</description><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>Let's talk about one of the hidden gems in the ReasonScape evaluation results, lucky #13:</title><link>https://huggingface.co/posts/mike-ravkine/324105560308241</link><description>Let's talk about one of the hidden gems in the ReasonScape evaluation results, lucky #13: aquif-ai/aquif-3.5-8B-Think Built on top of the solid Qwen3-8B foundation, aquif-3.5-8B-Think successfully preserves the high performance of the original model while consuming 30-50% less reasoning tokens. The most notable regression vs the base model here is in arithmetic - if your workload is math heavy this model demonstrates an unfortunate collapse with performance under growing complexity. The interesting combination of awesome overall performance on SVG simple shapes identification coupled with a total inability to recognize more complex shapes like 'House' or 'Arrow' is a behavior directly inherited from the base model (but with a ~20% improvement in token utilization). If you like your reasoning models token-efficient, Aquif-3.5-8B-Think is well worth a spin. Higher resolution, more detailed, interactive plots are available at the m12X explorer: https://reasonscape.com/m12x/explorer/...</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/mike-ravkine/324105560308241</guid></item><item><title>🎉 I am excited to share news of a project my brother, Umar Butler, and I have been working on for what feels like an eternity now.</title><link>https://huggingface.co/posts/abdurrahmanbutler/994710514786612</link><description>🎉 I am excited to share news of a project my brother, Umar Butler, and I have been working on for what feels like an eternity now. 𝐈𝐧𝐭𝐫𝐨𝐝𝐮𝐜𝐢𝐧𝐠 𝐌𝐋𝐄𝐁 — 𝐭𝐡𝐞 𝐌𝐚𝐬𝐬𝐢𝐯𝐞 𝐋𝐞𝐠𝐚𝐥 𝐄𝐦𝐛𝐞𝐝𝐝𝐢𝐧𝐠 𝐁𝐞𝐧𝐜𝐡𝐦𝐚𝐫𝐤. A suite of 10 high-quality English legal IR datasets, designed by legal experts to set a new standard for comparing embedding models. Whether you’re exploring legal RAG on your home computer, or running enterprise-scale retrieval, apples-to-apples evaluation is crucial. That’s why we’ve open-sourced everything - including our 7 brand-new, hand-crafted retrieval datasets. All of these datasets are now live on Hugging Face. Any guesses which embedding model leads on legal retrieval? 𝐇𝐢𝐧𝐭: it’s not OpenAI or Google - they place 7th and 9th on our leaderboard. To do well on MLEB, embedding models must demonstrate both extensive legal domain knowledge and strong legal reasoning skills. https://huggingface.co/blog/isaacus/introducing-mleb See translation</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/abdurrahmanbutler/994710514786612</guid></item><item><title>MLEB  is the largest, most diverse, and most comprehensive benchmark for legal text embedding models.</title><link>https://huggingface.co/posts/adlumal/955872232459431</link><description>MLEB is the largest, most diverse, and most comprehensive benchmark for legal text embedding models. https://huggingface.co/blog/isaacus/introducing-mleb See translation</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/adlumal/955872232459431</guid></item><item><title>AutoRound keeps evolving its LLM quantization algorithm! 🚀</title><link>https://huggingface.co/posts/wenhuach/917073841450527</link><description>AutoRound keeps evolving its LLM quantization algorithm! 🚀 After enhancing W2A16 quantization, we now offer a fast algorithm to generate mixed bits/data-type schemes (~2mins for 8B models), great for MXFP4 and W2A16. Learn more: https://github.com/intel/auto-round/blob/main/docs/step_by_step.md#autoscheme See translation</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/wenhuach/917073841450527</guid></item><item><title>Did Hugging Face just ban hammer a bunch of bot accounts or am I just so uninteresting that 30% of my subs dropped me overnight?</title><link>https://huggingface.co/posts/ZennyKenny/876142925777221</link><description>Did Hugging Face just ban hammer a bunch of bot accounts or am I just so uninteresting that 30% of my subs dropped me overnight? 😬 Wait, don't answer that. See translation</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/ZennyKenny/876142925777221</guid></item><item><title>@Qwen</title><link>https://huggingface.co/posts/sergiopaniego/524517454338742</link><description>@ Qwen released their new small and dense VLMs (Qwen3-VL). They're incredibly capable and one of my all-time favourite VLMs. 🤗 We’ve prepared some resources to help you get started. &gt; Fine-tune Qwen3-VL-4B with SFT or GRPO (free Colab notebooks): &gt; SFT: https://colab.research.google.com/github/huggingface/trl/blob/main/examples/notebooks/sft_qwen_vl.ipynb &gt; GRPO: https://colab.research.google.com/github/huggingface/trl/blob/main/examples/notebooks/grpo_qwen3_vl.ipynb &gt; Compare object detection vs. Moondream3: sergiopaniego/vlm_object_understanding &gt; Fine-tune from the CLI using TRL: https://github.com/kashif/Qwen3-VL/blob/trl-sft/qwen-vl-finetune/README.md#trl-based-training-single-gpu See translation</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/sergiopaniego/524517454338742</guid></item><item><title>Building AI Agents from First Principles at GoDaddy</title><link>https://huggingface.co/posts/TravisMuhlestein/661240541677725</link><description>Building AI Agents from First Principles at GoDaddy Everyone’s talking about AI agents lately, and for good reason. But at GoDaddy, we’re going deeper: starting from first principles to explore what makes an agent truly robust and usable in real-world scenarios. Instead of asking “What can we build fast?” we’re asking “What design choices make agents flexible, testable, and reliable long term?” Core Concepts • Tool-centric design: everything an agent does is a tool call, with precise APIs and granularity. • Decision vs. delivery: agents decide what to do; tools handle how to do it—keeping systems modular. • Structured outputs &amp; reflection: LLMs output both the tool call and the reason behind it, making debugging and iteration easier. • Universal tools: even user interactions (inform, confirm, request) are abstracted as tools, clarifying boundaries between logic and interface. Real-world use cases → Not just theory ✅Routing and responding to support messages ✅Surfacing emerging...</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/TravisMuhlestein/661240541677725</guid></item><item><title>Released an AWQ quantized version of BosonAI’s Higgs-Llama-3-70B model! 🎉</title><link>https://huggingface.co/posts/ronantakizawa/301388923540512</link><description>Released an AWQ quantized version of BosonAI’s Higgs-Llama-3-70B model! 🎉 The Higgs-Llama-3-70B is an LLM specialized in role-playing, useful for game characters. Using an NVIDIA B200 GPU, I was able to compress the huge 140GB model into 37GB while keeping minimal perplexity 👍 ronantakizawa/higgs-llama-3-70b-awq See translation</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/ronantakizawa/301388923540512</guid></item><item><title>I just set up the new Ollama integration in VS Code, so I wanted to test it. I hooked up glm-4.6, and asked it to build a full stack Ollama chat interface.</title><link>https://huggingface.co/posts/unmodeled-tyler/140461476722015</link><description>I just set up the new Ollama integration in VS Code, so I wanted to test it. I hooked up glm-4.6, and asked it to build a full stack Ollama chat interface. In only 3 prompts, glm-4.6 built the app, and debugged it successfully. One prompt for the build, two for debugging -&gt; fully functional app. I was genuinely impressed! It's really cool to see how powerful open source tools have become. The future is exciting and I'm here for it! See translation</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/unmodeled-tyler/140461476722015</guid></item><item><title>There are two very interesting reasoning models from</title><link>https://huggingface.co/posts/mike-ravkine/370448674179433</link><description>There are two very interesting reasoning models from ServiceNow-AI that I think are flying under everyone's radar - lets take a closer look at ServiceNow-AI/Apriel-1.5-15b-Thinker (#10 on the ReasonScape rankings) and ServiceNow-AI/Apriel-Nemotron-15b-Thinker (landing just below its brother at #12). A rather interesting attribute of these models is I have absolutely no idea what they are fine-tuned from, other then some kind of pre-small Mistrals! The non-nemo 15b looks like Mistral Pixtral 12B, but with 8 more layers while the nemo 15b analogously looks like Mistral NeMo 12B but with 10 more layers and a smaller max context length. The performance trade-offs between these two models are quite clear: the Nemotron provides ~30% shorter answers but at the expense of totally collapsing under difficulty on 4 of the 12 tasks ... which all just happen to have "Math" in common, so it's pretty easy to point the finger at exactly what the price for the lower reasoning token usage is here. In...</description><pubDate>Fri, 17 Oct 2025 09:25:33 GMT</pubDate><guid isPermaLink="true">https://huggingface.co/posts/mike-ravkine/370448674179433</guid></item></channel></rss>