{"version": "https://jsonfeed.org/version/1", "title": "Hugging Face Posts", "home_page_url": "https://huggingface.co/", "feed_url": "https://raw.githubusercontent.com/MichaelMarkert/rss/refs/heads/main/hf_posts.json", "items": [{"id": "https://huggingface.co/posts/yjernite/333157611385452", "image": "", "title": "Today in Privacy & AI Tooling - introducing a nifty new tool to examine where data goes in open-source apps on  \ud83e\udd17", "content_text": "Today in Privacy & AI Tooling - introducing a nifty new tool to examine where data goes in open-source apps on \ud83e\udd17 HF Spaces have tons (100Ks!) of cool demos leveraging or examining AI systems - and because most of them are OSS we can see exactly how they handle user data \ud83d\udcda\ud83d\udd0d That requires actually reading the code though, which isn't always easy or quick! Good news: code LMs have gotten pretty good at automatic review, so we can offload some of the work - here I'm using Qwen/Qwen2.5-Coder-32B-Instruct to generate reports and it works pretty OK \ud83d\ude4c The app works in three stages: 1. Download all code files 2. Use the Code LM to generate a detailed report pointing to code where data is transferred/(AI-)processed (screen 1) 3. Summarize the app's main functionality and data journeys (screen 2) 4. Build a Privacy TLDR with those inputs It comes with a bunch of pre-reviewed apps/Spaces, great to see how many process data locally or through (private) HF endpoints \ud83e\udd17 Note that this is a POC,...", "url": "https://huggingface.co/posts/yjernite/333157611385452", "date_published": "2025-04-18T17:22:29.881534"}, {"id": "https://huggingface.co/posts/MonsterMMORPG/401294184812659", "image": "", "title": "FramePack Full Tutorial: 1-Click to Install on Windows - Up to 120 Second Image-to-Videos with 6GB >", "content_text": "FramePack Full Tutorial: 1-Click to Install on Windows - Up to 120 Second Image-to-Videos with 6GB > https://youtu.be/HwMngohRmHg Tutorial video : https://youtu.be/HwMngohRmHg FramePack from legendary lllyasviel full Windows local tutorial with a very advanced Gradio app to generate consistent videos from images with as long as 120 seconds and as low as 6 GB GPUs. This tutorial will show you step by step how to install and use FramePack locall with a very advanced Graido app. Moreover, I have published installers for cloud services such as RunPod and Massed Compute for those GPU poor and who wants to scale. \ud83d\udd17 Full Instructions, Installers and Links Shared Post (the one used in the tutorial) \u2935\ufe0f \u25b6\ufe0f https://www.patreon.com/posts/click-to-open-post-used-in-tutorial-126855226 \ud83d\udd17 SECourses Official Discord 10500+ Members \u2935\ufe0f \u25b6\ufe0f https://discord.com/servers/software-engineering-courses-secourses-772774097734074388 \ud83d\udd17 Stable Diffusion, FLUX, Generative AI Tutorials and Resources GitHub \u2935\ufe0f \u25b6\ufe0f...", "url": "https://huggingface.co/posts/MonsterMMORPG/401294184812659", "date_published": "2025-04-18T17:22:29.882218"}, {"id": "https://huggingface.co/posts/JunhaoZhuang/767916607687281", "image": "", "title": "We are excited to announce the release of our paper, \"Cobra: Efficient Line Art COlorization with BRoAder References,\" along with the official code! Cobra is a novel efficient long-context fine-grained ID preservation framework for line art colorization, achieving high precision, efficiency, and flexible usability for comic colorization. By effectively integrating extensive contextual references, it transforms black-and-white line art into vibrant illustrations.", "content_text": "We are excited to announce the release of our paper, \"Cobra: Efficient Line Art COlorization with BRoAder References,\" along with the official code! Cobra is a novel efficient long-context fine-grained ID preservation framework for line art colorization, achieving high precision, efficiency, and flexible usability for comic colorization. By effectively integrating extensive contextual references, it transforms black-and-white line art into vibrant illustrations. We invite you to explore Cobra and share your feedback! You can access the paper and code via the following links: [PDF]( https://arxiv.org/abs/2504.12240 ) and [Project page]( https://zhuang2002.github.io/Cobra/ ). We eagerly anticipate your engagement and support! Thank you for your interest! See translation", "url": "https://huggingface.co/posts/JunhaoZhuang/767916607687281", "date_published": "2025-04-18T17:22:29.882563"}, {"id": "https://huggingface.co/posts/gavinkhung/300399121852584", "image": "", "title": "Want to see machine learning algorithms training?", "content_text": "Want to see machine learning algorithms training? I made a website: https://gavinkhung.github.io/machine-learning-visualized/ The website implements, visualizes, and mathematically derives machine learning algorithms from first-principles. Feel free to contribute to this open-source resource: https://github.com/gavinkhung/machine-learning-visualized See translation", "url": "https://huggingface.co/posts/gavinkhung/300399121852584", "date_published": "2025-04-18T17:22:29.882822"}, {"id": "https://huggingface.co/posts/prithivMLmods/125773384088431", "image": "", "title": "Try out the demo for Multimodal OCR featuring the implementation of models including", "content_text": "Try out the demo for Multimodal OCR featuring the implementation of models including RolmOCR and Qwen2VL OCR . The use case showcases image-text-to-text conversion and video understanding support for the RolmOCR model ! \ud83d\ude80 \ud83e\udd17Multimodal OCR Space : prithivMLmods/Multimodal-OCR \ud83d\udce6The models implemented in this Space are: + Qwen2VL OCR : prithivMLmods/Qwen2-VL-OCR-2B-Instruct [ or ] + Qwen2VL OCR2 : prithivMLmods/Qwen2-VL-OCR2-2B-Instruct + RolmOCR : reducto/RolmOCR Qwen2VL OCR supports only image-text-to-text in the space. See translation", "url": "https://huggingface.co/posts/prithivMLmods/125773384088431", "date_published": "2025-04-18T17:22:29.883185"}, {"id": "https://huggingface.co/posts/hesamation/750913380201236", "image": "", "title": "OpenAI just released a 34-page practical guide to building agents,", "content_text": "OpenAI just released a 34-page practical guide to building agents, Here's 10 things it teaches us: 1\u279c agents are different from workflows: they are complete autonomous systems that perform tasks on your behalf. many applications use LLMs for workflows, but this is not an agent. 2\u279c use them for tricky stuff: complex decision making, dynamic rules, unstructured data 3\u279c core recipe: each agent has three main components: Model (the brain), Tools, Instructions on how to behave 4\u279c choose the right brain: set up evals to get a baseline performance, use a smart model to see what's possible, gradually downgrade the model for cost and speed 5\u279c tools are key: choose well-defined and tested tools. an agent needs tools to retrieve data and context, and take actions. 6\u279c instruction matters A LOT: be super clear telling the agent its goals, steps, and rules. Vague instructions = unpredictable agent. Be explicit. 7\u279c start simple, then scale: often a single agent with several tools is ok. don't jump...", "url": "https://huggingface.co/posts/hesamation/750913380201236", "date_published": "2025-04-18T17:22:29.883739"}, {"id": "https://huggingface.co/posts/VolodymyrPugachov/428721082134198", "image": "", "title": "Introducing BioClinicalBERT-Triage: A Medical Triage Classification Model", "content_text": "Introducing BioClinicalBERT-Triage: A Medical Triage Classification Model I'm excited to share my latest project: a fine-tuned model for medical triage classification! What is BioClinicalBERT-Triage? BioClinicalBERT-Triage is a specialized model that classifies patient-reported symptoms into appropriate triage categories. Built on the foundation of emilyalsentzer/Bio_ClinicalBERT, this model helps healthcare providers prioritize patient care by analyzing symptom descriptions and medical history. Why I Built This As healthcare systems face increasing demands, efficient triage becomes crucial. This model aims to support healthcare professionals in quickly assessing the urgency of medical situations, particularly in telehealth and high-volume settings. Model Performance The model was trained on 42,513 medical symptom descriptions, using an 80:20 train/test split. After 3 epochs of training, the model achieved: Final training loss: 0.3246 Processing speed: 13.99 samples/second The loss...", "url": "https://huggingface.co/posts/VolodymyrPugachov/428721082134198", "date_published": "2025-04-18T17:22:29.884212"}, {"id": "https://huggingface.co/posts/Xenova/811708183292240", "image": "", "title": "Reasoning models like o3 and o4-mini are advancing faster than ever, but imagine what will be possible when they can run locally in your browser! \ud83e\udd2f", "content_text": "Reasoning models like o3 and o4-mini are advancing faster than ever, but imagine what will be possible when they can run locally in your browser! \ud83e\udd2f Well, with \ud83e\udd17 Transformers.js, you can do just that! Here's Zyphra's new ZR1 model running at over 100 tokens/second on WebGPU! \u26a1\ufe0f Giving models access to browser APIs (like File System, Screen Capture, and more) could unlock an entirely new class of web experiences that are personalized, interactive, and run locally in a secure, sandboxed environment. For now, try out the demo! \ud83d\udc47 webml-community/Zyphra-ZR1-WebGPU See translation", "url": "https://huggingface.co/posts/Xenova/811708183292240", "date_published": "2025-04-18T17:22:29.884563"}, {"id": "https://huggingface.co/posts/fdaudens/110266162418000", "image": "", "title": "Just tested something this morning that feels kind of game-changing for how we publish, discover, and consume news with AI: connecting Claude directly to the New York Times through MCP.", "content_text": "Just tested something this morning that feels kind of game-changing for how we publish, discover, and consume news with AI: connecting Claude directly to the New York Times through MCP. Picture this: You ask Claude about a topic, and it instantly pulls verified and trusted NYT content \u2014 no more guessing if the info is accurate. The cool part? Publishers stay in control of what they share via API, and users get fast, reliable access through the AI tools they already use. Instead of scraping random stuff off the web, we get a future where publishers actively shape how their journalism shows up in AI. It\u2019s still a bit technical to set up right now, but this could get super simple soon \u2014 like installing apps on your phone, but for your chatbot. And you keep the brand connection, too. Not saying it solves everything, but it\u2019s definitely a new way to distribute content \u2014 and maybe even find some fresh value in the middle of this whole news + AI shakeup. Early movers will have a head...", "url": "https://huggingface.co/posts/fdaudens/110266162418000", "date_published": "2025-04-18T17:22:29.885056"}, {"id": "https://huggingface.co/posts/bartowski/160920719239523", "image": "", "title": "Access requests enabled for latest GLM models", "content_text": "Access requests enabled for latest GLM models While a fix is being implemented ( https://github.com/ggml-org/llama.cpp/pull/12957 ) I want to leave the models up for visibility and continued discussion, but want to prevent accidental downloads of known broken models (even though there are settings that could fix it at runtime for now) With this goal, I've enabled access requests. I don't really want your data, so I'm sorry that I don't think there's a way around that? But that's what I'm gonna do for now, and I'll remove the gate when a fix is up and verified and I have a chance to re-convert and quantize! Hope you don't mind in the mean time :D See translation", "url": "https://huggingface.co/posts/bartowski/160920719239523", "date_published": "2025-04-18T17:22:29.885388"}]}