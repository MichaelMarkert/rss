{"version": "https://jsonfeed.org/version/1", "title": "Hugging Face Posts", "home_page_url": "https://huggingface.co/", "feed_url": "https://raw.githubusercontent.com/MichaelMarkert/rss/refs/heads/main/hf_posts.json", "items": [{"id": "https://huggingface.co/posts/fdaudens/198644025808355", "image": "", "title": "AI will bring us \"a country of yes-men on servers\" instead of one of \"Einsteins sitting in a data center\" if we continue on current trends.", "content_text": "AI will bring us \"a country of yes-men on servers\" instead of one of \"Einsteins sitting in a data center\" if we continue on current trends. Must-read by @ thomwolf deflating overblown AI promises and explaining what real scientific breakthroughs require. https://thomwolf.io/blog/scientific-ai.html See translation", "url": "https://huggingface.co/posts/fdaudens/198644025808355", "date_published": "2025-03-08T13:18:57.153873"}, {"id": "https://huggingface.co/posts/albertvillanova/674737128301579", "image": "", "title": "\ud83d\ude80 Big news for AI agents! With the latest release of smolagents, you can now securely execute Python code in sandboxed Docker or E2B environments. \ud83e\uddbe\ud83d\udd12", "content_text": "\ud83d\ude80 Big news for AI agents! With the latest release of smolagents, you can now securely execute Python code in sandboxed Docker or E2B environments. \ud83e\uddbe\ud83d\udd12 Here's why this is a game-changer for agent-based systems: \ud83e\uddf5\ud83d\udc47 1\ufe0f\u20e3 Security First \ud83d\udd10 Running AI agents in unrestricted Python environments is risky! With sandboxing, your agents are isolated, preventing unintended file access, network abuse, or system modifications. 2\ufe0f\u20e3 Deterministic & Reproducible Runs \ud83d\udce6 By running agents in containerized environments, you ensure that every execution happens in a controlled and predictable setting\u2014no more environment mismatches or dependency issues! 3\ufe0f\u20e3 Resource Control & Limits \ud83d\udea6 Docker and E2B allow you to enforce CPU, memory, and execution time limits, so rogue or inefficient agents don\u2019t spiral out of control. 4\ufe0f\u20e3 Safer Code Execution in Production \ud83c\udfed Deploy AI agents confidently, knowing that any generated code runs in an ephemeral, isolated environment, protecting your host machine and...", "url": "https://huggingface.co/posts/albertvillanova/674737128301579", "date_published": "2025-03-08T13:18:57.154460"}, {"id": "https://huggingface.co/posts/prithivMLmods/550891236404805", "image": "", "title": "SigLIP2 Image Classification  \ud83e\udde4", "content_text": "SigLIP2 Image Classification \ud83e\udde4 > https://huggingface.co/blog/prithivMLmods/siglip2-finetune-image-classification See translation", "url": "https://huggingface.co/posts/prithivMLmods/550891236404805", "date_published": "2025-03-08T13:18:57.154686"}, {"id": "https://huggingface.co/posts/albertvillanova/159056887588114", "image": "", "title": "\ud83d\ude80 New smolagents update: Safer Local Python Execution! \ud83e\uddbe\ud83d\udc0d", "content_text": "\ud83d\ude80 New smolagents update: Safer Local Python Execution! \ud83e\uddbe\ud83d\udc0d With the latest release, we've added security checks to the local Python interpreter: every evaluation is now analyzed for dangerous builtins, modules, and functions. \ud83d\udd12 Here's why this matters & what you need to know! \ud83e\uddf5\ud83d\udc47 1\ufe0f\u20e3 Why is local execution risky? \u26a0\ufe0f AI agents that run arbitrary Python code can unintentionally (or maliciously) access system files, run unsafe commands, or exfiltrate data. 2\ufe0f\u20e3 New Safety Layer in smolagents \ud83d\udee1\ufe0f We now inspect every return value during execution: \u2705 Allowed: Safe built-in types (e.g., numbers, strings, lists) \u26d4 Blocked: Dangerous functions/modules (e.g., os.system, subprocess, exec, shutil) 3\ufe0f\u20e3 Immediate Benefits \ud83d\udca1 - Prevent agents from accessing unsafe builtins - Block unauthorized file or network access - Reduce accidental security vulnerabilities 4\ufe0f\u20e3 Security Disclaimer \u26a0\ufe0f \ud83d\udea8 Despite these improvements, local Python execution is NEVER 100% safe. \ud83d\udea8 If you need true isolation, use a remote...", "url": "https://huggingface.co/posts/albertvillanova/159056887588114", "date_published": "2025-03-08T13:18:57.155236"}, {"id": "https://huggingface.co/posts/as-cle-bert/983515572081803", "image": "", "title": "I just released a fully automated evaluation framework for your RAG applications!\ud83d\udcc8", "content_text": "I just released a fully automated evaluation framework for your RAG applications!\ud83d\udcc8 GitHub \ud83d\udc49 https://github.com/AstraBert/diRAGnosis PyPi \ud83d\udc49 https://pypi.org/project/diragnosis/ It's called \ud835\udc1d\ud835\udc22\ud835\udc11\ud835\udc00\ud835\udc06\ud835\udc27\ud835\udc28\ud835\udc2c\ud835\udc22\ud835\udc2c and is a lightweight framework that helps you \ud835\uddf1\ud835\uddf6\ud835\uddee\ud835\uddf4\ud835\uddfb\ud835\uddfc\ud835\ude00\ud835\uddf2 \ud835\ude01\ud835\uddf5\ud835\uddf2 \ud835\uddfd\ud835\uddf2\ud835\uddff\ud835\uddf3\ud835\uddfc\ud835\uddff\ud835\uddfa\ud835\uddee\ud835\uddfb\ud835\uddf0\ud835\uddf2 \ud835\uddfc\ud835\uddf3 \ud835\udddf\ud835\udddf\ud835\udde0\ud835\ude00 \ud835\uddee\ud835\uddfb\ud835\uddf1 \ud835\uddff\ud835\uddf2\ud835\ude01\ud835\uddff\ud835\uddf6\ud835\uddf2\ud835\ude03\ud835\uddee\ud835\uddf9 \ud835\uddfa\ud835\uddfc\ud835\uddf1\ud835\uddf2\ud835\uddf9\ud835\ude00 \ud835\uddf6\ud835\uddfb \ud835\udde5\ud835\uddd4\ud835\uddda \ud835\uddee\ud835\uddfd\ud835\uddfd\ud835\uddf9\ud835\uddf6\ud835\uddf0\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb\ud835\ude00. You can launch it as an application locally (it's Docker-ready!\ud83d\udc0b) or, if you want more flexibility, you can integrate it in your code as a python package\ud83d\udce6 The workflow is simple: \ud83e\udde0 You choose your favorite LLM provider and model (supported, for now, are Mistral AI, Groq, Anthropic, OpenAI and Cohere) \ud83e\udde0 You pick the embedding models provider and the embedding model you prefer (supported, for now, are Mistral AI, Hugging Face, Cohere and OpenAI) \ud83d\udcc4 You prepare and provide your documents \u2699\ufe0f Documents are ingested into a Qdrant vector database and transformed into a synthetic question dataset with the help of LlamaIndex \ud83d\udcca The LLM is evaluated for the faithfulness and...", "url": "https://huggingface.co/posts/as-cle-bert/983515572081803", "date_published": "2025-03-08T13:18:57.155867"}, {"id": "https://huggingface.co/posts/DualityAI-RebekahBogdanoff/233802872800595", "image": "", "title": "\ud83d\ude80 Duality is super excited to announce that our Kaggle competition is LIVE! Synthetic-to-Real Object Detection Challenge is LIVE! \ud83d\udea6", "content_text": "\ud83d\ude80 Duality is super excited to announce that our Kaggle competition is LIVE! Synthetic-to-Real Object Detection Challenge is LIVE! \ud83d\udea6 Want to master AI training, learn industry-proven synthetic data workflows, and compete for public recognition and cash prizes? \ud83d\udc49 Join our Synthetic-to-Real Object Detection Challenge on Kaggle! https://www.kaggle.com/competitions/synthetic-2-real-object-detection-challenge/overview Compete to build the top-performing model capable of detecting real-world objects\u2014trained entirely on synthetic data. Master these industry-proven methods for faster, more targeted, and diverse dataset creation, and set yourself apart, unlocking today's most exciting AI opportunities. Ready to test your skills? \ud83c\udfc6 The Challenge Train an object detection model using synthetic images created with Falcon\u2014Duality AI's cutting-edge digital twin simulation software\u2014then evaluate your model on real-world imagery. The Twist? \ud83d\udcc8 Boost your model\u2019s accuracy by creating and refining your...", "url": "https://huggingface.co/posts/DualityAI-RebekahBogdanoff/233802872800595", "date_published": "2025-03-08T13:18:57.156456"}, {"id": "https://huggingface.co/posts/mcpotato/157940161703448", "image": "", "title": "Stoked to announce we've partnered with JFrog to continue improving safety on the Hub! \ud83d\udc38", "content_text": "Stoked to announce we've partnered with JFrog to continue improving safety on the Hub! \ud83d\udc38 Their model scanner brings new scanning capabilities to the table, aimed at reducing alert fatigue. More on that in our blog post: https://huggingface.co/blog/jfrog See translation", "url": "https://huggingface.co/posts/mcpotato/157940161703448", "date_published": "2025-03-08T13:18:57.156707"}, {"id": "https://huggingface.co/posts/vincentg64/711986528939991", "image": "", "title": "LLM Challenge with Petabytes of Data to Prove Famous Number Theory Conjecture", "content_text": "LLM Challenge with Petabytes of Data to Prove Famous Number Theory Conjecture https://mltblog.com/3F3Y9Yd In my recent article \u201cPiercing the Deepest Mathematical Mystery\u201d, I paved the way to proving a famous multi-century old conjecture: are the digits of major mathematical constant such as \u03c0, e, log 2, or \u221a2 evenly distributed? No one before ever managed to prove even the most basic trivialities, such as whether the proportion of \u20180\u2019 or \u20181\u2019 exists in the binary expansions of any of these constants, or if it oscillates indefinitely between 0% and 100%. Here I provide an overview of the new framework built to uncover deep results about the digit distribution of Euler\u2019s number e, discuss the latest developments, share a 10x faster version of the code, and feature new potential research areas in LLMs, AI, quantum dynamics, high performance computing, cryptography, dynamical systems, number theory and more, arising from my discovery. Perhaps the most interesting part is testing LLMs and...", "url": "https://huggingface.co/posts/vincentg64/711986528939991", "date_published": "2025-03-08T13:18:57.157209"}, {"id": "https://huggingface.co/posts/clem/866977064333227", "image": "", "title": "Super happy to welcome Nvidia as our latest enterprise hub customer. They have almost 2,000 team members using Hugging Face, and close to 20,000 followers of their org. Can't wait to see what they'll open-source for all of us in the coming months!", "content_text": "Super happy to welcome Nvidia as our latest enterprise hub customer. They have almost 2,000 team members using Hugging Face, and close to 20,000 followers of their org. Can't wait to see what they'll open-source for all of us in the coming months! Nvidia's org: https://huggingface.co/nvidia Enterprise hub: https://huggingface.co/enterprise See translation", "url": "https://huggingface.co/posts/clem/866977064333227", "date_published": "2025-03-08T13:18:57.157481"}, {"id": "https://huggingface.co/posts/mattmdjaga/268441512819972", "image": "", "title": "\ud83d\udea8 Gray Swan AI's Biggest AI Jailbreaking Arena Yet! $130K+ \ud83d\udea8", "content_text": "\ud83d\udea8 Gray Swan AI's Biggest AI Jailbreaking Arena Yet! $130K+ \ud83d\udea8 \ud83d\udd39 Agent Red-Teaming Challenge \u2013 test direct & indirect attacks on anonymous frontier models! \ud83d\udd39 $130K+ in prizes & giveaways \u2013 co-sponsored by OpenAI & supported by UK AI Security Institute \ud83c\uddec\ud83c\udde7 \ud83d\udd39 March 8 \u2013 April 6 \u2013 fresh exploits = fresh rewards! How It Works: \u2705 Anonymous models from top providers \ud83e\udd10 \u2705 Direct & indirect prompt injection paths \ud83d\udd04 \u2705 Weekly challenges for new behaviors \ud83d\uddd3\ufe0f \u2705 Speed & quantity-based rewards \u23e9\ud83d\udcb0 Why Join? \u2696\ufe0f Neutral judging \u2013 UK AISI & automated judges ensure fairness \ud83c\udfaf No pre-trained defenses \u2013 a true red-teaming battlefield \ud83d\udcbb 5 Apple laptops up for grabs \u2013 increase chances by inviting friends! \ud83d\udd17 Arena: app.grayswan.ai/arena/challenge/agent-red-teaming \ud83d\udd17 Discord: discord.gg/grayswanai \ud83d\udd25 No illusions, no mercy. Push AI agents to the limit & claim your share of $130K+! \ud83d\ude80 See translation", "url": "https://huggingface.co/posts/mattmdjaga/268441512819972", "date_published": "2025-03-08T13:18:57.157912"}]}