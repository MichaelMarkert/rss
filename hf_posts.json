{"version": "https://jsonfeed.org/version/1", "title": "Hugging Face Posts", "home_page_url": "https://huggingface.co/", "feed_url": "https://raw.githubusercontent.com/MichaelMarkert/rss/refs/heads/main/hf_posts.json", "items": [{"id": "https://huggingface.co/posts/Jaward/445538723467397", "image": "", "title": "Awesome intro to LLM course \"Language Modeling from Scratch\" by stanford. love the aesthetics behind the lecture notes, notes-in-code genius idea\ud83d\udc4d", "content_text": "Awesome intro to LLM course \"Language Modeling from Scratch\" by stanford. love the aesthetics behind the lecture notes, notes-in-code genius idea\ud83d\udc4d Course site: https://stanford-cs336.github.io/spring2025/ Repo: https://github.com/stanford-cs336/spring2025-lectures Videos: https://www.youtube.com/playlist?list=PLoROMvodv4rOY23Y0BoGoBGgQ1zmU_MT_ See translation", "url": "https://huggingface.co/posts/Jaward/445538723467397", "date_published": "2025-06-26T09:26:42.735235"}, {"id": "https://huggingface.co/posts/yeonseok-zeticai/727857049396772", "image": "", "title": "Hi everyone,", "content_text": "Hi everyone, I\u2019ve been running small language models (SLLMs) directly on smartphones \u2014 completely offline, with no cloud backend or server API calls. I wanted to share: 1. \u26a1 Tokens/sec performance across several SLLMs 2. \ud83e\udd16 Observations on hardware utilization (where the workload actually runs) 3. \ud83d\udccf Trade-offs between model size, latency, and feasibility for mobile apps There are reports for below models - QWEN3 0.6B - NVIDIA/Nemotron QWEN 1.5B - SimpleScaling S1 - TinyLlama - Unsloth tuned Llama 3.2 1B - Naver HyperClova 0.5B \ud83d\udcdcComparable Benchmark reports (no cloud, all on-device): I\u2019d really value your thoughts on: - Creative ideas to further optimize inference under these hardware constraints - Other compact LLMs worth testing on-device - Experiences you\u2019ve had trying to deploy LLMs at the edge If there\u2019s interest, I\u2019m happy to share more details on the test setup, hardware specs, or the tooling we used for these comparisons. Thanks for taking a look, and you can build your own...", "url": "https://huggingface.co/posts/yeonseok-zeticai/727857049396772", "date_published": "2025-06-26T09:26:42.735746"}, {"id": "https://huggingface.co/posts/Abhaykoul/997219525730173", "image": "", "title": "Introducing Dhanishtha 2.0: World's first Intermediate Thinking Model", "content_text": "Introducing Dhanishtha 2.0: World's first Intermediate Thinking Model Dhanishtha 2.0 is the world's first LLM designed to think between the responses. Unlike other Reasoning LLMs, which think just once. Dhanishtha can think, rethink, self-evaluate, and refine in between responses using multiple <think> blocks. This technique makes it Hinghlt Token efficient it Uses up to 79% fewer tokens than DeepSeek R1 --- You can try our model from: https://helpingai.co/chat Also, we're gonna Open-Source Dhanistha on July 1st. --- For Devs: \ud83d\udd11 Get your API key at https://helpingai.co/dashboard from HelpingAI import HAI # pip install HelpingAI ==1.1.1 from rich import print hai = HAI( api_key = \"hl-***********************\" ) response = hai.chat.completions.create( model = \"Dhanishtha-2.0-preview\" , messages=[{ \"role\" : \"user\" , \"content\" : \"What is the value of \u222b0\u221e\ud835\udc653/\ud835\udc65\u22121\ud835\udc51\ud835\udc65 ?\" }], stream = True , hide_think = False # Hide or show models thinking ) for chunk in response: print...", "url": "https://huggingface.co/posts/Abhaykoul/997219525730173", "date_published": "2025-06-26T09:26:42.736224"}, {"id": "https://huggingface.co/posts/pagezyhf/610118153924016", "image": "", "title": "Hackathons in Paris on July 5th and 6th!", "content_text": "Hackathons in Paris on July 5th and 6th! Hugging Face just wrapped 4 months of deep work with AMD to push kernel-level optimization on their MI300X GPUs. Now, it's time to share everything we learned. Join us in Paris at STATION F for a hands-on weekend of workshops and a hackathon focused on making open-source LLMs faster and more efficient on AMD. Prizes, amazing host speakers, ... if you want more details, navigate to https://lu.ma/fmvdjmur ! See translation", "url": "https://huggingface.co/posts/pagezyhf/610118153924016", "date_published": "2025-06-26T09:26:42.736492"}, {"id": "https://huggingface.co/posts/bartowski/460622149989234", "image": "", "title": "Was going to post this on /r/LocalLLaMa, but apparently it's without moderation at this time :')", "content_text": "Was going to post this on /r/LocalLLaMa, but apparently it's without moderation at this time :') bartowski/mistralai_Mistral-Small-3.2-24B-Instruct-2506-GGUF Was able to use previous mistral chat templates, some hints from Qwen templates, and Claude to piece together a seemingly working chat template, tested it with llama.cpp server and got perfect results, though lmstudio still seems to be struggling for some reason (don't know how to specify a jinja file there) Outlined the details of the script and results in my llama.cpp PR to add the jinja template: https://github.com/ggml-org/llama.cpp/pull/14349 Start server with a command like this: ./llama-server -m /models/mistralai_Mistral-Small -3 .2 -24 B-Instruct -2506 -Q4_K_M.gguf --jinja --chat-template-file /models/Mistral-Small -3 .2 -24 B-Instruct -2506 .jinja and it should be perfect! Hoping it'll work for ALL tools if lmstudio gets an update or something, not just llama.cpp, but very happy to see it works flawlessly in llama.cpp...", "url": "https://huggingface.co/posts/bartowski/460622149989234", "date_published": "2025-06-26T09:26:42.736883"}, {"id": "https://huggingface.co/posts/BFFree/190836494252067", "image": "", "title": "Working on some chess set concepts. I went towards minimal sculpted shapes then returned to some traditionalism.", "content_text": "Working on some chess set concepts. I went towards minimal sculpted shapes then returned to some traditionalism. See translation", "url": "https://huggingface.co/posts/BFFree/190836494252067", "date_published": "2025-06-26T09:26:42.737081"}, {"id": "https://huggingface.co/posts/cgeorgiaw/508678634223532", "image": "", "title": "Huge new bio datasets just dropped!!!", "content_text": "Huge new bio datasets just dropped!!! Check out them out @ ginkgo-datapoints Read the blog for more info: https://huggingface.co/blog/cgeorgiaw/gdp See translation", "url": "https://huggingface.co/posts/cgeorgiaw/508678634223532", "date_published": "2025-06-26T09:26:42.737282"}, {"id": "https://huggingface.co/posts/merve/128480916969769", "image": "", "title": "Release picks of the past week is here!  Find more models, datasets, Spaces here", "content_text": "Release picks of the past week is here! Find more models, datasets, Spaces here merve/june-20-releases-68594824d1f4dfa61aee3433 \ud83d\uddbc\ufe0f VLMs/OCR > moonshotai/Kimi-VL-A3B-Thinking-2506 is a powerful reasoning vision LM, 3B active params, smarter with less tokens, supports long documents, videos \ud83d\udc4f (OS) > nanonets/Nanonets-OCR-s is 3.75B params OCR model based on Qwen2.5VL-3B-Instruct (OS) \ud83d\udcac LLMs > moonshotai/Kimi-Dev-72B is a strong coding model based on Qwen2.5-72B (OS) > Mistral released mistralai/Mistral-Small-3.2-24B-Instruct-2506 , an update to their former model with better function calling & instruction following (OS) \ud83d\udde3\ufe0f Audio > Google released google/magenta-realtime , real time music generation & audio synthesis (cc-by-4) > kyutai released new speech-to-text models that come in 1B & 2B ( kyutai/stt-1b-en_fr , stt-2b-en_fr) with 0.5s and 2.5s delay 3D > Tencent released tencent/Hunyuan3D-2.1 an image-to-3D model (see below) See translation", "url": "https://huggingface.co/posts/merve/128480916969769", "date_published": "2025-06-26T09:26:42.737734"}, {"id": "https://huggingface.co/posts/albertvillanova/188022025451209", "image": "", "title": "\ud83d\ude80 SmolAgents v1.19.0 is live!", "content_text": "\ud83d\ude80 SmolAgents v1.19.0 is live! This release brings major improvements to agent flexibility, UI usability, streaming architecture, and developer experience: making it easier than ever to build smart, interactive AI agents. Here's what's new: \ud83d\udd27 Agent Upgrades - Support for managed agents in ToolCallingAgent - Context manager support for cleaner agent lifecycle handling - Output formatting now uses XML tags for consistency \ud83d\udda5\ufe0f UI Enhancements - GradioUI now supports reset_agent_memory: perfect for fresh starts in dev & demos. \ud83d\udd04 Streaming Refactor - Streaming event aggregation moved off the Model class - \u27a1\ufe0f Better architecture & maintainability \ud83d\udce6 Output Tracking - CodeAgent outputs are now stored in ActionStep - \u2705 More visibility and structure to agent decisions \ud83d\udc1b Bug Fixes - Smarter planning logic - Cleaner Docker logs - Better prompt formatting for additional_args - Safer internal functions and final answer matching \ud83d\udcda Docs Improvements - Added quickstart examples with tool usage - One-...", "url": "https://huggingface.co/posts/albertvillanova/188022025451209", "date_published": "2025-06-26T09:26:42.738252"}, {"id": "https://huggingface.co/posts/freddyaboulton/509614991477853", "image": "", "title": "The new", "content_text": "The new multimodalart/self-forcing model and demo are truly impressive! See translation", "url": "https://huggingface.co/posts/freddyaboulton/509614991477853", "date_published": "2025-06-26T09:26:42.738451"}]}