{"version": "https://jsonfeed.org/version/1", "title": "Hugging Face Posts", "home_page_url": "https://huggingface.co/", "feed_url": "https://raw.githubusercontent.com/MichaelMarkert/rss/refs/heads/main/hf_posts.json", "items": [{"id": "https://huggingface.co/posts/a-r-r-o-w/278025275110164", "image": "", "title": "Caching is an essential technique used in diffusion inference serving for speeding up image/video generations. Diffusers just added support for another caching method: First Block Cache - a technique developed by", "content_text": "Caching is an essential technique used in diffusion inference serving for speeding up image/video generations. Diffusers just added support for another caching method: First Block Cache - a technique developed by @ chengzeyi building upon the ideas of TeaCache. The idea in short is: if the model predictions do not vary much over successive inference steps, we can skip certain steps where the prediction difference is small. To figure out whether an inference step will make a significant improvement to the overall velocity/noise prediction, we calculate the relative difference of the output of the first transformer block at timestep $t$ with $t-1$, and compare it against a selected threshold. If the difference is lower than the threshold, we skip the step. A higher threshold will lead to more steps being skipped. However, skipping many steps is bad because it can throw off the model predictions, and so we need to test and select the threshold based on level of quality-speed tradeoff...", "url": "https://huggingface.co/posts/a-r-r-o-w/278025275110164", "date_published": "2025-07-10T13:38:05.202777"}, {"id": "https://huggingface.co/posts/merve/713910696313243", "image": "", "title": "GitHub refuses to render notebooks for a long time now \ud83d\udc94", "content_text": "GitHub refuses to render notebooks for a long time now \ud83d\udc94 so smol-vision now lives in Hugging Face model repository \ud83e\udd17 merve/smol-vision See translation", "url": "https://huggingface.co/posts/merve/713910696313243", "date_published": "2025-07-10T13:38:05.203013"}, {"id": "https://huggingface.co/posts/merve/482686790570915", "image": "", "title": "ByteDance released Tar 1.5B and 7B: image-text in image-text out models, fully open-source \ud83d\udc4f", "content_text": "ByteDance released Tar 1.5B and 7B: image-text in image-text out models, fully open-source \ud83d\udc4f ByteDance-Seed/tar-6864cf0d9fe59a3b91cc4260 They have an image tokenizer unified with text, and they de-tokenize using either of two models (LLM and diffusion) The model is actually a full LLM (Qwen2), the tokenizer converts image tokens \ud83e\udd2f See translation", "url": "https://huggingface.co/posts/merve/482686790570915", "date_published": "2025-07-10T13:38:05.203295"}, {"id": "https://huggingface.co/posts/YerbaPage/789674491872223", "image": "", "title": "How to achieve 100% Pass Rate on HumanEval ? \ud83d\udd25", "content_text": "How to achieve 100% Pass Rate on HumanEval ? \ud83d\udd25 Meet MGDebugger if you are tired of LLMs failing on complex bugs \ud83e\udd14 Our MGDebugger, just hit 100% accuracy on HumanEval using the DeepSeek-R1 model. \ud83d\ude80 \u2728 Demo: learnmlf/MGDebugger \ud83d\udcdd Paper: From Code to Correctness: Closing the Last Mile of Code Generation with Hierarchical Debugging (2410.01215) \ud83d\udcbb Code: https://github.com/YerbaPage/MGDebugger HumanEval may be retired, we're ready for the next challenge In more complex scenarios! You may also take look at this repo for a collection of awesome repo-level coding tasks! \ud83d\udda5\ufe0f https://github.com/YerbaPage/Awesome-Repo-Level-Code-Generation See translation", "url": "https://huggingface.co/posts/YerbaPage/789674491872223", "date_published": "2025-07-10T13:38:05.203639"}, {"id": "https://huggingface.co/posts/giadap/958744591263435", "image": "", "title": "I've been posting bits and pieces about this research, but now I can finally say: new paper alert \ud83d\udea8", "content_text": "I've been posting bits and pieces about this research, but now I can finally say: new paper alert \ud83d\udea8 My colleague @ brunatrevelin and I just shared a paper exploring why traditional consent frameworks are breaking down in AI contexts (forthcoming chapter in a collective book). The current model places impossible burdens on users to manage countless consent decisions. Meanwhile, AI systems learn to mimic our voices and writing styles from data we unknowingly provided years ago. What's next? We need to shift from individual responsibility to collective accountability. This means: - Organizations designing systems that respect human agency by default - Developers building ethics into models from the start - Policymakers creating frameworks beyond minimal compliance Blog post: https://huggingface.co/blog/giadap/consentful-ai Paper: Can AI be Consentful? (2507.01051) See translation", "url": "https://huggingface.co/posts/giadap/958744591263435", "date_published": "2025-07-10T13:38:05.204029"}, {"id": "https://huggingface.co/posts/louisbrulenaudet/165456039014439", "image": "", "title": "Because hackathons are often the starting point for many AI projects, I've created a Python-backend template incorporating my feedback to streamline collaboration and urgent deployments \ud83c\udfce\ufe0f", "content_text": "Because hackathons are often the starting point for many AI projects, I've created a Python-backend template incorporating my feedback to streamline collaboration and urgent deployments \ud83c\udfce\ufe0f Within a year, I had the opportunity to participate in hackathons organized by Mistral, OpenAI, and DeepMind and this GitHub template is structured around several fundamental building blocks and recommendations I offer developers eager to participate in their first hackathon, whether as part of a team or individually. Its emphasis is on rapid setup and deployment through: - uv as a package manager, simplifying usage via a series of pre-configured make commands. - FastAPI for API management, structured in a modular architecture designed to minimize branch conflicts during merges to main branches (using minimal health-check and ping routes to verify Docker\u2019s proper execution and backend accessibility on the local network). - Pydantic for validation and type handling, which simplifies debugging and...", "url": "https://huggingface.co/posts/louisbrulenaudet/165456039014439", "date_published": "2025-07-10T13:38:05.204646"}, {"id": "https://huggingface.co/posts/ProCreations/258072359756545", "image": "", "title": "33 followers AGAIN in another day is insane.... Thank you guys!", "content_text": "33 followers AGAIN in another day is insane.... Thank you guys! trying to get to the #1 trending community article. upvote my article to help out! https://huggingface.co/blog/ProCreations/transformers-are-getting-old Also, I made a ZeroGPU space that lets you try out smollm3 with no setup needed: Check it out! ProCreations/smollm3 See translation", "url": "https://huggingface.co/posts/ProCreations/258072359756545", "date_published": "2025-07-10T13:38:05.204888"}, {"id": "https://huggingface.co/posts/jbilcke-hf/967618646971244", "image": "", "title": "Are you looking to run a robot simulator, maybe run long robot policy training tasks, but you don't have the GPU at home?", "content_text": "Are you looking to run a robot simulator, maybe run long robot policy training tasks, but you don't have the GPU at home? Well.. you can run MuJoCo inside a Hugging Face space! All you have to do is to clone this space: jbilcke-hf/train-robots-with-mujoco Don't forget to a pick a Nvidia GPU for your space, to be able to get some nice OpenGL renders! Are you new to MuJoCo and/or JupyterLab notebooks? You can get started with this tutorial (select \"Open from URL\" then paste the URL to this notebook): jbilcke-hf/train-robots-with-mujoco Happy robot hacking! \ud83e\uddbe See translation", "url": "https://huggingface.co/posts/jbilcke-hf/967618646971244", "date_published": "2025-07-10T13:38:05.205216"}, {"id": "https://huggingface.co/posts/dylanebert/570846136228804", "image": "", "title": "dylanebert/3d-arena", "content_text": "dylanebert/3d-arena now supports topology-only voting and ranking! Let's see which Gen3D model produces the best topology See translation", "url": "https://huggingface.co/posts/dylanebert/570846136228804", "date_published": "2025-07-10T13:38:05.205429"}, {"id": "https://huggingface.co/posts/prithivMLmods/579637350338894", "image": "", "title": "Demo of OCR & Math QA using multi-capable VLMs like MonkeyOCR-pro-1.2B, R1-One-Vision, VisionaryR1, Vision Matters-7B, and VIGAL-7B, all running together with support for both image and video inference. \ud83e\ude90", "content_text": "Demo of OCR & Math QA using multi-capable VLMs like MonkeyOCR-pro-1.2B, R1-One-Vision, VisionaryR1, Vision Matters-7B, and VIGAL-7B, all running together with support for both image and video inference. \ud83e\ude90 \u2726 Demo Spaces : \u2937 Multimodal VLMs : prithivMLmods/Multimodal-VLMs \u2937 Multimodal OCR : prithivMLmods/Multimodal-OCR \u2726 Models : \u2937 Visionary R1 : maifoundations/Visionary-R1 \u2937 MonkeyOCR [1.2B] : echo840/MonkeyOCR-pro-1.2B \u2937 ViGaL 7B : yunfeixie/ViGaL-7B \u2937 R1 Onevision 7B : Fancy-MLLM/R1-Onevision-7B \u2937 Vision Matters 7B : Yuting6/Vision-Matters-7B \u2726 MonkeyOCR-pro-1.2B Colab T4 Demo [ notebook ] \u2937 MonkeyOCR-pro-1.2B-ReportLab : https://github.com/PRITHIVSAKTHIUR/OCR-ReportLab/blob/main/MonkeyOCR-0709/MonkeyOCR-pro-1.2B-ReportLab.ipynb \u2726 GitHub : https://github.com/PRITHIVSAKTHIUR/OCR-ReportLab The community GPU grant was given by Hugging Face \u2014 special thanks to them.\ud83e\udd17\ud83d\ude80 . . . To know more about it, visit the model card of the respective model. !! See translation", "url": "https://huggingface.co/posts/prithivMLmods/579637350338894", "date_published": "2025-07-10T13:38:05.205849"}]}