{"version": "https://jsonfeed.org/version/1", "title": "Hugging Face Posts", "home_page_url": "https://huggingface.co/", "feed_url": "https://raw.githubusercontent.com/MichaelMarkert/rss/refs/heads/main/hf_posts.json", "items": [{"id": "https://huggingface.co/posts/AdinaY/438609555040169", "image": "", "title": "DeepSeek, Alibaba, Skywork,  Xiaomi, Bytedance.....", "content_text": "DeepSeek, Alibaba, Skywork, Xiaomi, Bytedance..... And that\u2019s just part of the companies from the Chinese community that released open models in April \ud83e\udd2f zh-ai-community/april-2025-open-releases-from-the-chinese-community-67ea699965f6e4c135cab10f \ud83c\udfac Video > MAGI-1 by SandAI > SkyReels-A2 & SkyReels-V2 by Skywork > Wan2.1-FLF2V by Alibaba-Wan \ud83c\udfa8 Image > HiDream-I1 by Vivago AI > Kimi-VL by Moonshot AI > InstantCharacter by InstantX & Tencent-Hunyuan > Step1X-Edit by StepFun > EasyControl by Shanghai Jiaotong University \ud83e\udde0 Reasoning > MiMo by Xiaomi > Skywork-R1V 2.0 by Skywork > ChatTS by ByteDance > Kimina by Moonshot AI & Numina > GLM-Z1 by Zhipu AI > Skywork OR1 by Skywork > Kimi-VL-Thinking by Moonshot AI \ud83d\udd0a Audio > Kimi-Audio by Moonshot AI > IndexTTS by BiliBili > MegaTTS3 by ByteDance > Dolphin by DataOceanAI \ud83d\udd22 Math > DeepSeek Prover V2 by Deepseek \ud83c\udf0d LLM > Qwen by Alibaba-Qwen > InternVL3 by Shanghai AI lab > Ernie4.5 (demo) by Baidu \ud83d\udcca Dataset > PHYBench by Eureka-Lab >...", "url": "https://huggingface.co/posts/AdinaY/438609555040169", "date_published": "2025-05-01T17:20:11.841032"}, {"id": "https://huggingface.co/posts/merve/662080130760638", "image": "", "title": "Meta released Llama Guard 4 and new Prompt Guard 2 models \ud83d\udd25", "content_text": "Meta released Llama Guard 4 and new Prompt Guard 2 models \ud83d\udd25 Llama Guard 4 is a new model to filter model inputs/outputs both text-only and image \ud83d\udee1\ufe0f use it before and after LLMs/VLMs! meta-llama/Llama-Guard-4-12B Prompt Guard 2 22M & 86M are smol models to prevent model jailbreaks and prompt injections \u2694 meta-llama/Llama-Prompt-Guard-2-22M meta-llama/Llama-Guard-4-12B Both come with new release of transformers \ud83e\udd17 Try the model right away \ud83d\udc49\ud83c\udffbhttps://github.com/huggingface/huggingface-llama-recipes/blob/main/llama_guard_4.ipynb Read our blog to learn more and easily get started \ud83d\udc49\ud83c\udffb https://huggingface.co/blog/llama-guard-4 \ud83e\udd99 See translation", "url": "https://huggingface.co/posts/merve/662080130760638", "date_published": "2025-05-01T17:20:11.841410"}, {"id": "https://huggingface.co/posts/jsulz/177281245715492", "image": "", "title": "At", "content_text": "At xet-team we've been hard at work bringing a new generation of storage to the Hugging Face community, and we\u2019ve crossed some major milestones: \ud83d\udc77 Over 2,000 builders and nearing 100 organizations with access to Xet \ud83d\ude80 Over 70,000 model and dataset repositories are Xet-backed \ud83e\udd2f 1.4 petabytes managed by Xet As we move repos from LFS to Xet for everyone we onboard, we\u2019re pushing our content-addressed store (CAS). Check out the chart below \ud83d\udc47 of CAS hitting up to 150 Gb/s throughput this past week. All of this growth is helping us build richer insights. We expanded our repo graph, which maps how Xet-backed repositories on the Hub share bytes with each other. Check out the current network in the image below (nodes are repositories, edges are where repos share bytes) and visit the space to see how different versions of Qwen, Llama, and Phi models are grouped together xet-team/repo-graph Join the waitlist to get access! https://huggingface.co/join/xet See translation", "url": "https://huggingface.co/posts/jsulz/177281245715492", "date_published": "2025-05-01T17:20:11.841845"}, {"id": "https://huggingface.co/posts/fdaudens/447589021070314", "image": "", "title": "Want to know which AI models are least likely to hallucinate \u2014 and how to keep yours from spiking hallucinations by 20%?", "content_text": "Want to know which AI models are least likely to hallucinate \u2014 and how to keep yours from spiking hallucinations by 20%? A new benchmark called Phare, by Giskard, tested leading models across multiple languages, revealing three key findings: 1\ufe0f\u20e3 Popular models aren't necessarily factual. Some models ranking highest in user satisfaction benchmarks like LMArena are actually more prone to hallucination. 2\ufe0f\u20e3 The way you ask matters - a lot. When users present claims confidently (\"My teacher said...\"), models are 15% less likely to correct misinformation vs. neutral framing (\"I heard...\"). 3\ufe0f\u20e3 Telling models to \"be concise\" can increase hallucination by up to 20%. What's also cool is that the full dataset is public - use them to test your own models or dive deeper into the results! H/t @ davidberenstein1957 for the link. - Study: https://www.giskard.ai/knowledge/good-answers-are-not-necessarily-factual-answers-an-analysis-of-hallucination-in-leading-llms - Leaderboard:...", "url": "https://huggingface.co/posts/fdaudens/447589021070314", "date_published": "2025-05-01T17:20:11.842275"}, {"id": "https://huggingface.co/posts/sanaka87/703703147958180", "image": "", "title": "\ud83d\ude80 Excited to Share Our Latest Work: In-Context Edit: Enabling Instructional Image Editing with In-Context Generation in Large Scale Diffusion Transformer\uff5e", "content_text": "\ud83d\ude80 Excited to Share Our Latest Work: In-Context Edit: Enabling Instructional Image Editing with In-Context Generation in Large Scale Diffusion Transformer\uff5e \ud83c\udfa8 Daily Paper: In-Context Edit: Enabling Instructional Image Editing with In-Context Generation in Large Scale Diffusion Transformer (2504.20690) \ud83d\udd13 Code is now open source! \ud83d\udd25 Huggingface DEMO: RiverZ/ICEdit \ud83c\udf10 Project Website: https://river-zhang.github.io/ICEdit-gh-pages/ \ud83c\udfe0 GitHub Repository: https://github.com/River-Zhang/ICEdit/blob/main/scripts/gradio_demo.py \ud83e\udd17 Huggingface: sanaka87/ICEdit-MoE-LoRA \ud83d\udcc4 arxiv Paper: In-Context Edit: Enabling Instructional Image Editing with In-Context Generation in Large Scale Diffusion Transformer (2504.20690) \ud83d\udd25 Why it\u2019s cool: - Achieves high-quality, multi-task image editing. - Uses only 1% of the training parameters and 0.1% of the training data compared to existing methods \u2014 extremely efficient - Beats several commercial models on background preservation, ID control, and consistency - Open-...", "url": "https://huggingface.co/posts/sanaka87/703703147958180", "date_published": "2025-05-01T17:20:11.842760"}, {"id": "https://huggingface.co/posts/abidlabs/767083410530735", "image": "", "title": "Hi folks! Excited to share a new feature from the Gradio team along with a tutorial.", "content_text": "Hi folks! Excited to share a new feature from the Gradio team along with a tutorial. If you don't already know, Gradio is an open-source Python library used to build interfaces for machine learning models. Beyond just creating UIs, Gradio also exposes API capabilities and now, Gradio apps can be launched Model Context Protocol (MCP) servers for LLMs. If you already know how to use Gradio, there are only two additional things you need to do: * Add standard docstrings to your function (these will be used to generate the descriptions for your tools for the LLM) * Set mcp_server=True in launch() Here's a complete example (make sure you already have the latest version of Gradio installed): import gradio as gr def letter_counter ( word, letter ): \"\"\"Count the occurrences of a specific letter in a word. Args: word: The word or phrase to analyze letter: The letter to count occurrences of Returns: The number of times the letter appears in the word \"\"\" return...", "url": "https://huggingface.co/posts/abidlabs/767083410530735", "date_published": "2025-05-01T17:20:11.843222"}, {"id": "https://huggingface.co/posts/anakin87/692858936883406", "image": "", "title": "\ud835\udddc \ud835\ude01\ud835\uddff\ud835\uddee\ud835\uddf6\ud835\uddfb\ud835\uddf2\ud835\uddf1 \ud835\uddee \ud835\udddf\ud835\uddee\ud835\uddfb\ud835\uddf4\ud835\ude02\ud835\uddee\ud835\uddf4\ud835\uddf2 \ud835\udde0\ud835\uddfc\ud835\uddf1\ud835\uddf2\ud835\uddf9 \ud835\ude01\ud835\uddfc \ud835\ude00\ud835\uddf0\ud835\uddf5\ud835\uddf2\ud835\uddf1\ud835\ude02\ud835\uddf9\ud835\uddf2 \ud835\uddf2\ud835\ude03\ud835\uddf2\ud835\uddfb\ud835\ude01\ud835\ude00 \ud835\ude04\ud835\uddf6\ud835\ude01\ud835\uddf5 \ud835\uddda\ud835\udde5\ud835\udde3\ud835\udde2! \ud83d\udc51 \ud83d\uddd3\ufe0f", "content_text": "\ud835\udddc \ud835\ude01\ud835\uddff\ud835\uddee\ud835\uddf6\ud835\uddfb\ud835\uddf2\ud835\uddf1 \ud835\uddee \ud835\udddf\ud835\uddee\ud835\uddfb\ud835\uddf4\ud835\ude02\ud835\uddee\ud835\uddf4\ud835\uddf2 \ud835\udde0\ud835\uddfc\ud835\uddf1\ud835\uddf2\ud835\uddf9 \ud835\ude01\ud835\uddfc \ud835\ude00\ud835\uddf0\ud835\uddf5\ud835\uddf2\ud835\uddf1\ud835\ude02\ud835\uddf9\ud835\uddf2 \ud835\uddf2\ud835\ude03\ud835\uddf2\ud835\uddfb\ud835\ude01\ud835\ude00 \ud835\ude04\ud835\uddf6\ud835\ude01\ud835\uddf5 \ud835\uddda\ud835\udde5\ud835\udde3\ud835\udde2! \ud83d\udc51 \ud83d\uddd3\ufe0f \u270d\ufe0f Blog post: https://huggingface.co/blog/anakin87/qwen-scheduler-grpo I experimented with GRPO lately. I am fascinated by models learning from prompts and rewards - no example answers needed like in Supervised Fine-Tuning. After the DeepSeek boom, everyone is trying GRPO with GSM8K or the Countdown Game... I wanted a different challenge, like \ud835\ude01\ud835\uddf2\ud835\uddee\ud835\uddf0\ud835\uddf5\ud835\uddf6\ud835\uddfb\ud835\uddf4 \ud835\uddee \ud835\uddfa\ud835\uddfc\ud835\uddf1\ud835\uddf2\ud835\uddf9 \ud835\ude01\ud835\uddfc \ud835\uddf0\ud835\uddff\ud835\uddf2\ud835\uddee\ud835\ude01\ud835\uddf2 \ud835\uddee \ud835\ude00\ud835\uddf0\ud835\uddf5\ud835\uddf2\ud835\uddf1\ud835\ude02\ud835\uddf9\ud835\uddf2 \ud835\uddf3\ud835\uddff\ud835\uddfc\ud835\uddfa \ud835\uddee \ud835\uddf9\ud835\uddf6\ud835\ude00\ud835\ude01 \ud835\uddfc\ud835\uddf3 \ud835\uddf2\ud835\ude03\ud835\uddf2\ud835\uddfb\ud835\ude01\ud835\ude00 \ud835\uddee\ud835\uddfb\ud835\uddf1 \ud835\uddfd\ud835\uddff\ud835\uddf6\ud835\uddfc\ud835\uddff\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\uddf2\ud835\ude00. Choosing an original problem forced me to: \ud83e\udd14 Think about the problem setting \ud83e\uddec Generate data \ud83e\udd0f Choose the right base model \ud83c\udfc6 Design reward functions (and experiencing reward hacking) \ud83d\udd04 Run multiple rounds of training, hoping that my model would learn something. A fun and rewarding \ud83d\ude04 experience. I learned a lot of things, that I want to share with you. \ud83d\udc47 \u270d\ufe0f Blog post: https://huggingface.co/blog/anakin87/qwen-scheduler-grpo \ud83d\udcbb Code: https://github.com/anakin87/qwen-scheduler-grpo \ud83e\udd17 Hugging Face collection...", "url": "https://huggingface.co/posts/anakin87/692858936883406", "date_published": "2025-05-01T17:20:11.843682"}, {"id": "https://huggingface.co/posts/merterbak/337137510653930", "image": "", "title": "Qwen 3 models released\ud83d\udd25", "content_text": "Qwen 3 models released\ud83d\udd25 It offers 2 MoE and 6 dense models with following parameter sizes: 0.6B, 1.7B, 4B, 8B, 14B, 30B(MoE), 32B, and 235B(MoE). Models: Qwen/qwen3-67dd247413f0e2e4f653967f Blog: https://qwenlm.github.io/blog/qwen3/ Demo: Qwen/Qwen3-Demo GitHub: https://github.com/QwenLM/Qwen3 \u2705 Pre-trained 119 languages(36 trillion tokens) and dialects with strong translation and instruction following abilities. (Qwen2.5 was pre-trained on 18 trillion tokens.) \u2705Qwen3 dense models match the performance of larger Qwen2.5 models. For example, Qwen3-1.7B/4B/8B/14B/32B perform like Qwen2.5-3B/7B/14B/32B/72B. \u2705 Three stage done while pretraining: \u2022 Stage 1: General language learning and knowledge building. \u2022 Stage 2: Reasoning boost with STEM, coding, and logic skills. \u2022 Stage 3: Long context training \u2705 It supports MCP in the model \u2705 Strong agent skills \u2705 Supports seamless between thinking mode (for hard tasks like math and coding) and non-thinking mode (for fast chatting) inside chat...", "url": "https://huggingface.co/posts/merterbak/337137510653930", "date_published": "2025-05-01T17:20:11.844132"}, {"id": "https://huggingface.co/posts/Xenova/886388075601859", "image": "", "title": "Introducing the ONNX model explorer: Browse, search, and visualize neural networks directly in your browser. \ud83e\udd2f A great tool for anyone studying Machine Learning! We're also releasing the entire dataset of graphs so you can use them in your own projects! \ud83e\udd17", "content_text": "Introducing the ONNX model explorer: Browse, search, and visualize neural networks directly in your browser. \ud83e\udd2f A great tool for anyone studying Machine Learning! We're also releasing the entire dataset of graphs so you can use them in your own projects! \ud83e\udd17 Check it out! \ud83d\udc47 Demo: onnx-community/model-explorer Dataset: onnx-community/model-explorer Source code: https://github.com/xenova/model-explorer See translation", "url": "https://huggingface.co/posts/Xenova/886388075601859", "date_published": "2025-05-01T17:20:11.844436"}, {"id": "https://huggingface.co/posts/onekq/480034917828267", "image": "", "title": "I tested Qwen3 235b and 32b and they are both worse than Qwen2.5 32b.", "content_text": "I tested Qwen3 235b and 32b and they are both worse than Qwen2.5 32b. onekq-ai/WebApp1K-models-leaderboard I used non-thinking mode because the thinking mode is too slow \ud83d\udc22\ud83d\udc22\ud83d\udc22 to be usable in any way. Sigh ... See translation", "url": "https://huggingface.co/posts/onekq/480034917828267", "date_published": "2025-05-01T17:20:11.844671"}]}