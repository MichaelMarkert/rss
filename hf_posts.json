{"version": "https://jsonfeed.org/version/1", "title": "Hugging Face Posts", "home_page_url": "https://huggingface.co/", "feed_url": "https://raw.githubusercontent.com/MichaelMarkert/rss/refs/heads/main/hf_posts.json", "items": [{"id": "https://huggingface.co/posts/codelion/510406818109359", "image": "", "title": "I recently worked on a LoRA that improves tool use in LLM. Thought the approach might interest folks here.", "content_text": "I recently worked on a LoRA that improves tool use in LLM. Thought the approach might interest folks here. The issue I have had when trying to use some of the local LLMs with coding agents is this: Me: \"Find all API endpoints with authentication in this codebase\" LLM: \"You should look for @ app .route decorators and check if they have auth middleware...\" But I often want it to search the files and show me but the LLM doesn't trigger a tool use call. To fine-tune it for tool use I combined two data sources: 1. Magpie scenarios - 5000+ diverse tasks (bug hunting, refactoring, security audits) 2. Real execution - Ran these on actual repos (FastAPI, Django, React) to get authentic tool responses This ensures the model learns both breadth (many scenarios) and depth (real tool behavior). Tools We Taught: - read_file - Actually read file contents - search_files - Regex/pattern search across codebases - find_definition - Locate classes/functions - analyze_imports - Dependency tracking -...", "url": "https://huggingface.co/posts/codelion/510406818109359", "date_published": "2025-09-01T09:27:34.820188"}, {"id": "https://huggingface.co/posts/Jaward/864148450814843", "image": "", "title": "It\u2019s absolutely mind blowing - the work Dynamics Lab is doing!!", "content_text": "It\u2019s absolutely mind blowing - the work Dynamics Lab is doing!! With just a single input image and in a few seconds, their new world engine model (Mirage 2) can generate a whole new interactive world that\u2019s physics informed and fully explorable in real-time\ud83e\udd2f Try it yourself: https://demo.dynamicslab.ai/chaos See translation", "url": "https://huggingface.co/posts/Jaward/864148450814843", "date_published": "2025-09-01T09:27:34.820477"}, {"id": "https://huggingface.co/posts/Locutusque/640139873710354", "image": "", "title": "\ud83c\udf32\ud83c\udf44 LLM Forest Orchestra: Turning Hidden States into Music", "content_text": "\ud83c\udf32\ud83c\udf44 LLM Forest Orchestra: Turning Hidden States into Music Hello everyone! I'm excited to introduce a new Space I've been developing called LLM Forest Orchestra. This project converts the hidden states and attention patterns of transformer models into layered MIDI compositions. The concept draws inspiration from mushrooms and mycelial networks in forests. Fungi create underground connections linking plants and trees, establishing what some call a \"wood-wide web\" where signals and nutrients travel. Researchers have discovered that these exchanges form patterns resembling rhythms and pulses. When translated appropriately, these patterns can become music. Transformers operate through remarkably similar principles: tokens share signals via hidden states and attention heads. This Space transforms those invisible information flows into notes, chords, and rhythms, treating the model as a digital forest orchestra. \ud83c\udf9b Features * Two compute modes: - Full model operates on a Hugging Face model...", "url": "https://huggingface.co/posts/Locutusque/640139873710354", "date_published": "2025-09-01T09:27:34.821056"}, {"id": "https://huggingface.co/posts/prithivMLmods/604588784783928", "image": "", "title": "Introducing", "content_text": "Introducing prithivMLmods/DeepCaption-VLA-7B , a multimodal VLM designed for reasoning with long-shot captions (Captioning and Vision-Language Attribution). It focuses on defining visual properties, object attributes, and scene details across a wide spectrum of images and aspect ratios, generating attribute-rich image captions. The model supports creative, artistic, and technical applications that require detailed descriptions. \ud83e\udd17\ud83d\udd25 \u2726\ufe0e Models: prithivMLmods/DeepCaption-VLA-7B , also includes prithivMLmods/DeepAttriCap-VLA-3B , an experimental model for vision-language attribution. \u2726\ufe0e Try the demo here: prithivMLmods/VisionScope-R2 \u2726\ufe0e Try it now on Google Colab, with support for T4 GPUs in 4-bit quant_type: https://github.com/PRITHIVSAKTHIUR/Multimodal-Outpost-Notebooks/blob/main/DeepCaption-VLA-7B%5B4bit%20-%20notebook%20demo%5D/DeepCaption-VLA-7B.ipynb \u2726\ufe0e Collection: prithivMLmods/deepcaption-attr-68b041172ebcb867e45c556a . . . To know more about it, visit the model card of the...", "url": "https://huggingface.co/posts/prithivMLmods/604588784783928", "date_published": "2025-09-01T09:27:34.821503"}, {"id": "https://huggingface.co/posts/MonsterMMORPG/262579091589206", "image": "", "title": "Huge updates made for SECourses Musubi Tuner - 1-Click to Install App for LoRA Training and Full Fine Tuning Qwen Image, Qwen Image Edit, Wan 2.1 and Wan 2.2 Models with Musubi Tuner with Ready Presets", "content_text": "Huge updates made for SECourses Musubi Tuner - 1-Click to Install App for LoRA Training and Full Fine Tuning Qwen Image, Qwen Image Edit, Wan 2.1 and Wan 2.2 Models with Musubi Tuner with Ready Presets 1-Click to install app link : https://www.patreon.com/posts/137551634 Check all the screenshots 30 August 2025 Update V7 Dataset TOML file generate error fixed Qwen2.5-VL image captioning turns out working perfect on Windows It turns out my model file was corrupted even though it was same size Therefore I have updated the model downloader and now it will check and verify SHA 256 of files therefore it will be 100% accurate Prompt file selection folder icon issue fixed Downloader file will use generated venv of installation Make sure to run it after installation completed Fixed skip existing captions functionality in Image Captioning with Qwen2.5-VL Previously skipping was happening after caption generation which was destroying the skip logic Now properly checks for existing captions...", "url": "https://huggingface.co/posts/MonsterMMORPG/262579091589206", "date_published": "2025-09-01T09:27:34.821991"}, {"id": "https://huggingface.co/posts/codelion/741062673202173", "image": "", "title": "I wanted to share a technique that's been working really well for recovering performance after INT4 quantization.", "content_text": "I wanted to share a technique that's been working really well for recovering performance after INT4 quantization. Typically, quantizing the LLM to INT4 (unlike say INT8) for inference can incur some accuracy loss. Instead of accepting the quality loss, we used the FP16 model as a teacher to train a tiny LoRA adapter (rank=16) for the quantized model. The cool part: the model generates its own training data using the Magpie technique so no external datasets needed. This is critical because we want to remain as much as possible in the distribution of the model's natural responses. Last year Apple's foundational models paper ( https://arxiv.org/pdf/2407.21075 ) had proposed a similar technique and found \"By using accuracy-recovery LoRA adapters with only rank 16, Alpaca win rate can be improved by 7-18%, GMS8K accuracy is boosted by 5-10%.\" (page 47). We saw similar results on Qwen3-0.6B: Perplexity: 2.40 \u2192 2.09 (only 5.7% degradation from FP16 baseline) Memory: Only 0.28GB vs 1.0GB...", "url": "https://huggingface.co/posts/codelion/741062673202173", "date_published": "2025-09-01T09:27:34.822539"}, {"id": "https://huggingface.co/posts/MonsterMMORPG/626834107736478", "image": "", "title": "Nano Banana (Gemini 2.5 Flash Image) Full Tutorial \u2014 27 Unique Cases vs Qwen Image Edit \u2014 Free 2 Use :", "content_text": "Nano Banana (Gemini 2.5 Flash Image) Full Tutorial \u2014 27 Unique Cases vs Qwen Image Edit \u2014 Free 2 Use : https://youtu.be/qPUreQxB8zQ Tutorial link : https://youtu.be/qPUreQxB8zQ Nano Banana AI image editing model was published by Google today. It is officially named the Google Gemini 2.5 Flash Image model. It is the most advanced zero-shot image editing model ever made. I have conducted a thorough, in-depth review of this model with 27 unique cases. All prompts, images used, and results are demonstrated in real-time\u2014live in this tutorial. Moreover, I have compared each result with the state-of-the-art (SOTA) best open-source, locally available, and free-to-use Qwen Image Edit model, so we can see which model performs better at which tasks. Video Chapters 0:00 Introduction to Google's \"Nano Banana\" (Gemini 2.5 Flash) 0:28 Comparing Gemini vs. Qwen Image Edit Model (27 Test Cases) 1:33 Solving Gemini's Low Resolution with SUPIR Upscaling 2:28 Teaser: Upcoming Qwen Image LoRA Training...", "url": "https://huggingface.co/posts/MonsterMMORPG/626834107736478", "date_published": "2025-09-01T09:27:34.823181"}, {"id": "https://huggingface.co/posts/jjokah/677752694420450", "image": "", "title": "The combination of Gemini Nano (Google's AI model) and the Tensor G5 chip (Google's AI processor), built into the Pixel 10 (Google's Smartphone), provides Google with a strong foundation to continue pushing the limits of edge AI \u2192 \ud83d\udd2eMagic Cue.", "content_text": "The combination of Gemini Nano (Google's AI model) and the Tensor G5 chip (Google's AI processor), built into the Pixel 10 (Google's Smartphone), provides Google with a strong foundation to continue pushing the limits of edge AI \u2192 \ud83d\udd2eMagic Cue. Magic Cue digs through your device (Gmail, Calendar, Messages, Photos, screenshots, notes, and more) to surface what\u2019s useful at that moment. Ref (Magic Cue): https://store.google.com/intl/en/ideas/articles/magic-cue/ See translation", "url": "https://huggingface.co/posts/jjokah/677752694420450", "date_published": "2025-09-01T09:27:34.823475"}, {"id": "https://huggingface.co/posts/codelion/329352982390313", "image": "", "title": "Over 40 percent of AI-generated code contains security vulnerabilities. We recently worked on a LoRA to write secure code by default using automated Semgrep analysis and GRPO, achieving 97 percent reduction in vulnerabilities without requiring security-specific prompts.", "content_text": "Over 40 percent of AI-generated code contains security vulnerabilities. We recently worked on a LoRA to write secure code by default using automated Semgrep analysis and GRPO, achieving 97 percent reduction in vulnerabilities without requiring security-specific prompts. Technical Approach: Automated security training pipeline combining Semgrep vulnerability detection with preference learning. Generate multiple solutions with varying security awareness, automatically analyze for vulnerabilities, create preference pairs based on security scores, train using GRPO with multi-factor scoring. Scoring System (100 points total): - Functionality: 40 points - Does the code work correctly - Security patterns: 40 points - Uses secure coding practices - Low vulnerabilities: 20 points - Semgrep score below threshold This balanced scoring prevents reward hacking where models generate empty functions to avoid vulnerabilities. Real Transformation Examples: Database query before: query = f\"SELECT *...", "url": "https://huggingface.co/posts/codelion/329352982390313", "date_published": "2025-09-01T09:27:34.823890"}, {"id": "https://huggingface.co/posts/louisbrulenaudet/410111970297370", "image": "", "title": "Although more and more code editors are aligning themselves with the AGENTS.md file standard, some still use specific nomenclatures that can make it difficult to maintain different configuration files when several people are working on the same project with different agents.", "content_text": "Although more and more code editors are aligning themselves with the AGENTS.md file standard, some still use specific nomenclatures that can make it difficult to maintain different configuration files when several people are working on the same project with different agents. Bodyboard addresses this by generating canonical instructions for code helpers from a single AGENTS.md file, thereby streamlining the production of adapter outputs for Gemini CLI, Copilot, Cline, Claude, Rules, Windsurf, and OpenAI Codex integrations. You just have to: npm install -g bodyboard Then run, at the root of your project: bodyboard all Link to npm: https://www.npmjs.com/package/bodyboard Link to the GitHub repo: https://github.com/louisbrulenaudet/bodyboard It's a very simple project, but it addresses certain issues I've encountered, so why not make it available to everyone... If you have other ideas for adapters to create, feel free to open a PR on the GitHub repo. See translation", "url": "https://huggingface.co/posts/louisbrulenaudet/410111970297370", "date_published": "2025-09-01T09:27:34.824244"}]}