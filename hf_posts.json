{"version": "https://jsonfeed.org/version/1", "title": "Hugging Face Posts", "home_page_url": "https://huggingface.co/", "feed_url": "https://raw.githubusercontent.com/MichaelMarkert/rss/refs/heads/main/hf_posts.json", "items": [{"id": "https://huggingface.co/posts/burtenshaw/742649076372470", "image": "", "title": "I made a real time voice agent with FastRTC, smolagents, and hugging face inference providers. Check it out in this space:", "content_text": "I made a real time voice agent with FastRTC, smolagents, and hugging face inference providers. Check it out in this space: \ud83d\udd17 burtenshaw/coworking_agent See translation", "url": "https://huggingface.co/posts/burtenshaw/742649076372470", "date_published": "2025-03-01T09:20:15.987887"}, {"id": "https://huggingface.co/posts/jasoncorkill/366338815946143", "image": "", "title": "Has OpenGVLab Lumina Outperformed OpenAI\u2019s Model?", "content_text": "Has OpenGVLab Lumina Outperformed OpenAI\u2019s Model? We\u2019ve just released the results from a large-scale human evaluation (400k annotations) of OpenGVLab\u2019s newest text-to-image model, Lumina. Surprisingly, Lumina outperforms OpenAI\u2019s DALL-E 3 in terms of alignment, although it ranks #6 in our overall human preference benchmark. To support further development in text-to-image models, we\u2019re making our entire human-annotated dataset publicly available. If you\u2019re working on model improvements and need high-quality data, feel free to explore. We welcome your feedback and look forward to any insights you might share! Rapidata/OpenGVLab_Lumina_t2i_human_preference See translation", "url": "https://huggingface.co/posts/jasoncorkill/366338815946143", "date_published": "2025-03-01T09:20:15.988285"}, {"id": "https://huggingface.co/posts/singhsidhukuldeep/419917039256941", "image": "", "title": "O1 Embedder: Transforming Retrieval Models with Reasoning Capabilities", "content_text": "O1 Embedder: Transforming Retrieval Models with Reasoning Capabilities Researchers from University of Science and Technology of China and Beijing Academy of Artificial Intelligence have developed a novel retrieval model that mimics the slow-thinking capabilities of reasoning-focused LLMs like OpenAI's O1 and DeepSeek's R1. Unlike traditional embedding models that directly match queries with documents, O1 Embedder first generates thoughtful reflections about the query before performing retrieval. This two-step process significantly improves performance on complex retrieval tasks, especially those requiring intensive reasoning or zero-shot generalization to new domains. The technical implementation is fascinating: - The model integrates two essential functions: Thinking and Embedding - It uses an \"Exploration-Refinement\" data synthesis workflow where initial thoughts are generated by an LLM and refined by a retrieval committee - A multi-task training method fine-tunes a pre-trained...", "url": "https://huggingface.co/posts/singhsidhukuldeep/419917039256941", "date_published": "2025-03-01T09:20:15.988766"}, {"id": "https://huggingface.co/posts/DualityAI-RebekahBogdanoff/331073083077260", "image": "", "title": "\u2728\ud83c\udf89Duality.ai just released a multiclass object detection dataset for YOLOv8, as well as a tutorial on how to create your own multiclass dataset!", "content_text": "\u2728\ud83c\udf89Duality.ai just released a multiclass object detection dataset for YOLOv8, as well as a tutorial on how to create your own multiclass dataset! Carefully crafted (not GenAI created) synthetic data that ACTUALLY trains a model that works in the physical world. Create a free FalconEDU account, and download the 1000 image and annotation dataset - https://falcon.duality.ai/secure/documentation/ex3-dataset?sidebarMode=learn -or- Follow along with Exercise 3: Multiclass Object Detection to start creating - https://falcon.duality.ai/secure/documentation/ex3-objdetection-multiclass -or- Download this Colab notebook to see the data work, no hardware required - https://falcon.duality.ai/secure/documentation/ex3-dataset?sidebarMode=learn See translation", "url": "https://huggingface.co/posts/DualityAI-RebekahBogdanoff/331073083077260", "date_published": "2025-03-01T09:20:15.989147"}, {"id": "https://huggingface.co/posts/davanstrien/855251141208457", "image": "", "title": "Quick POC: Turn a Hugging Face dataset card into a short podcast introducing the dataset using all open models.", "content_text": "Quick POC: Turn a Hugging Face dataset card into a short podcast introducing the dataset using all open models. I think I'm the only weirdo who would enjoy listening to something like this though \ud83d\ude05 Here is an example for eth-nlped/stepverify See translation", "url": "https://huggingface.co/posts/davanstrien/855251141208457", "date_published": "2025-03-01T09:20:15.989414"}, {"id": "https://huggingface.co/posts/fdaudens/636972739498133", "image": "", "title": "Is this the best tool to extract clean info from PDFs, handwriting and complex documents yet?", "content_text": "Is this the best tool to extract clean info from PDFs, handwriting and complex documents yet? Open source olmOCR just dropped and the results are impressive. Tested the free demo with various documents, including a handwritten Claes Oldenburg letter. The speed is impressive: 3000 tokens/second on your own GPU - that's 1/32 the cost of GPT-4o ($190/million pages). Game-changer for content extraction and digital archives. To achieve this, Ai2 trained a 7B vision language model on 260K pages from 100K PDFs using \"document anchoring\" - combining PDF metadata with page images. Best part: it actually understands document structure (columns, tables, equations) instead of just jumbling everything together like most OCR tools. Their human eval results back this up. \ud83d\udc49 Try the demo: https://olmocr.allenai.org Going right into the AI toolkit: JournalistsonHF/ai-toolkit See translation", "url": "https://huggingface.co/posts/fdaudens/636972739498133", "date_published": "2025-03-01T09:20:15.989827"}, {"id": "https://huggingface.co/posts/prithivMLmods/305640045790864", "image": "", "title": "Dropping some of the custom fine-tunes based on SigLIP2,", "content_text": "Dropping some of the custom fine-tunes based on SigLIP2, with a single-label classification problem type! \ud83c\udf00\ud83e\udde4 - AI vs Deepfake vs Real : prithivMLmods/AI-vs-Deepfake-vs-Real-Siglip2 - Deepfake Detect : prithivMLmods/Deepfake-Detect-Siglip2 - Fire Detection : prithivMLmods/Fire-Detection-Siglip2 - Deepfake Quality Assess : prithivMLmods/Deepfake-Quality-Assess-Siglip2 - Guard Against Unsafe Content : prithivMLmods/Guard-Against-Unsafe-Content-Siglip2 \ud83c\udf20Collection : prithivMLmods/siglip2-custom-67bcdb2de8fe96b99fb4e19e See translation", "url": "https://huggingface.co/posts/prithivMLmods/305640045790864", "date_published": "2025-03-01T09:20:15.990169"}, {"id": "https://huggingface.co/posts/ngxson/723185341195650", "image": "", "title": "A comprehensive matrix for which format should you use.", "content_text": "A comprehensive matrix for which format should you use. Read more on my blog post: https://huggingface.co/blog/ngxson/common-ai-model-formats | Hardware | GGUF | PyTorch | Safetensors | ONNX | | ----------------- | ----------- | ------------------------ | -------------------------- | ------- | | CPU | \u2705 (best) | \ud83d\udfe1 | \ud83d\udfe1 | \u2705 | | GPU | \u2705 | \u2705 | \u2705 | \u2705 | | Mobile | \u2705 | \ud83d\udfe1 (via executorch) | \u274c | \u2705 | | Apple silicon | \u2705 | \ud83d\udfe1 | \u2705 (via MLX framework) | \u2705 | See translation", "url": "https://huggingface.co/posts/ngxson/723185341195650", "date_published": "2025-03-01T09:20:15.990527"}, {"id": "https://huggingface.co/posts/burtenshaw/352638065928004", "image": "", "title": "Now the Hugging Face agent course is getting real! With frameworks like smolagents, LlamaIndex, and LangChain.", "content_text": "Now the Hugging Face agent course is getting real! With frameworks like smolagents, LlamaIndex, and LangChain. \ud83d\udd17 Follow the org for updates https://huggingface.co/agents-course This week we are releasing the first framework unit in the course and it\u2019s on smolagents. This is what the unit covers: - why should you use smolagents vs another library? - how to build agents that use code - build multiagents systems - use vision language models for browser use The team has been working flat out on this for a few weeks. Led by @ sergiopaniego and supported by smolagents author @ m-ric . See translation", "url": "https://huggingface.co/posts/burtenshaw/352638065928004", "date_published": "2025-03-01T09:20:15.990879"}, {"id": "https://huggingface.co/posts/stefan-it/989004577410802", "image": "", "title": "After running some 3DMark and FurMark benchmarks on Windows to make sure that my new 5090 is not causing melting cables [1] and some nice shots with a thermal camera (I don't think that's too much), running some fine-tuning experiments with my favorite Flair & Transformers libraries are very easy to perform.", "content_text": "After running some 3DMark and FurMark benchmarks on Windows to make sure that my new 5090 is not causing melting cables [1] and some nice shots with a thermal camera (I don't think that's too much), running some fine-tuning experiments with my favorite Flair & Transformers libraries are very easy to perform. Important steps: Good idea is to start with a fresh Ubuntu 24.04 installation with latest CUDA 12.8 and the open NVIDIA driver - follow more advices from [2]: sudo apt -y install cuda-toolkit-12-8 nvidia-open I tried update from an existing Ubuntu installation with an older CUDA and driver version and it resulted in a non-startable system. If you are using PyTorch 2.6 with built CUDA 12.6 it will result in: NVIDIA Graphics Device with CUDA capability sm_120 is not compatible with the current PyTorch installation. The current PyTorch install supports CUDA capabilities sm_50 sm_60 sm_70 sm_75 sm_80 sm_86 sm_90. But no worries! For PyTorch you need just to use a nightly 2.7 version...", "url": "https://huggingface.co/posts/stefan-it/989004577410802", "date_published": "2025-03-01T09:20:15.991333"}]}